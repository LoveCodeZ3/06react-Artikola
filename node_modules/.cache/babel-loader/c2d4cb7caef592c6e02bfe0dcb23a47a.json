{"ast":null,"code":"import actionTypes from './actionType';\nimport { getNotification } from \"../requsets\";\n\nconst startPost = () => {\n  return {\n    type: actionTypes.START_NOTIFICATION_POST\n  };\n};\n\nconst finishPost = () => {\n  return {\n    type: actionTypes.FINISH_NOTIFICATION_POST\n  };\n};\n\nexport const markNotifiactionAsReadById = id => {\n  console.log(id);\n  return dispatch => {\n    //这里是模拟  一个服务端的请求\n    dispatch(startPost());\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID,\n        payload: {\n          id\n        }\n      });\n      dispatch(finishPost());\n    }, 2000);\n  };\n};\nexport const markAllNotificationRead = () => {\n  //全部已读\n  console.log(\"接收到了吗\");\n  return dispatch => {\n    dispatch(startPost());\n    setTimeout(() => {\n      dispatch({\n        type: actionTypes.MARK_ALL_NOTIFICATION_AS_READ\n      });\n      dispatch(finishPost());\n    }, 2000);\n  };\n};\nexport const getNotificationList = () => {\n  //全部已读\n  console.log(\"接收到了吗\");\n  return dispatch => {\n    dispatch(startPost());\n    getNotification().then(resp => {\n      console.log(resp);\n      dispatch({\n        type: actionTypes.RECIVED_NOTIFICATIONS,\n        payload: {\n          list: resp.list\n        }\n      });\n      dispatch(finishPost());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/actions/notifications.js"],"names":["actionTypes","getNotification","startPost","type","START_NOTIFICATION_POST","finishPost","FINISH_NOTIFICATION_POST","markNotifiactionAsReadById","id","console","log","dispatch","setTimeout","MARK_NOTIFICATION_AS_READ_BY_ID","payload","markAllNotificationRead","MARK_ALL_NOTIFICATION_AS_READ","getNotificationList","then","resp","RECIVED_NOTIFICATIONS","list"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAAQC,eAAR,QAA8B,aAA9B;;AACA,MAAMC,SAAS,GAAE,MAAI;AACjB,SAAM;AACFC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADhB,GAAN;AAGH,CAJD;;AAKA,MAAMC,UAAU,GAAE,MAAI;AAClB,SAAM;AACFF,IAAAA,IAAI,EAACH,WAAW,CAACM;AADf,GAAN;AAGH,CAJD;;AAQA,OAAO,MAAMC,0BAA0B,GAAIC,EAAD,IAAM;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,SAAOG,QAAQ,IAAG;AAEd;AACAA,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACAU,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,QAAQ,CAAC;AACLR,QAAAA,IAAI,EAACH,WAAW,CAACa,+BADZ;AAELC,QAAAA,OAAO,EAAC;AACJN,UAAAA;AADI;AAFH,OAAD,CAAR;AAOAG,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACH,KATS,EASR,IATQ,CAAV;AAUH,GAdD;AAeH,CAlBM;AAmBP,OAAO,MAAMU,uBAAuB,GAAG,MAAI;AACnC;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEJ,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACAU,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,QAAQ,CAAC;AACLR,QAAAA,IAAI,EAACH,WAAW,CAACgB;AADZ,OAAD,CAAR;AAIAL,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACH,KANS,EAMR,IANQ,CAAV;AAOH,GATD;AAUH,CAdM;AAeP,OAAO,MAAMY,mBAAmB,GAAG,MAAI;AACnC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEJ,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACAD,IAAAA,eAAe,GACViB,IADL,CACUC,IAAI,IAAE;AACRV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAR,MAAAA,QAAQ,CAAC;AACLR,QAAAA,IAAI,EAACH,WAAW,CAACoB,qBADZ;AAELN,QAAAA,OAAO,EAAC;AACJO,UAAAA,IAAI,EAACF,IAAI,CAACE;AADN;AAFH,OAAD,CAAR;AAMAV,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACH,KAVL;AAaH,GAfD;AAgBC,CApBM","sourcesContent":["import actionTypes from './actionType'\r\nimport {getNotification} from \"../requsets\"\r\nconst startPost =()=>{\r\n    return{\r\n        type: actionTypes.START_NOTIFICATION_POST\r\n    }\r\n}\r\nconst finishPost =()=>{\r\n    return{\r\n        type:actionTypes.FINISH_NOTIFICATION_POST\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const markNotifiactionAsReadById = (id)=>{\r\n    console.log(id)\r\n\r\n    return dispatch =>{\r\n    \r\n        //这里是模拟  一个服务端的请求\r\n        dispatch(startPost())\r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type:actionTypes.MARK_NOTIFICATION_AS_READ_BY_ID,\r\n                payload:{\r\n                    id\r\n                }\r\n            })\r\n\r\n            dispatch(finishPost())\r\n        },2000)\r\n    }\r\n}\r\nexport const markAllNotificationRead = ()=>{\r\n        //全部已读\r\n        console.log(\"接收到了吗\")\r\n        \r\n    return dispatch =>{\r\n        dispatch(startPost())\r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type:actionTypes.MARK_ALL_NOTIFICATION_AS_READ,\r\n        \r\n            })\r\n            dispatch(finishPost())\r\n        },2000)\r\n    }\r\n}\r\nexport const getNotificationList = ()=>{\r\n    //全部已读\r\n    console.log(\"接收到了吗\")\r\n    \r\nreturn dispatch =>{\r\n    dispatch(startPost())\r\n    getNotification()\r\n        .then(resp=>{\r\n            console.log(resp)\r\n            dispatch({\r\n                type:actionTypes.RECIVED_NOTIFICATIONS,\r\n                payload:{\r\n                    list:resp.list\r\n                }\r\n            })\r\n            dispatch(finishPost())\r\n        })\r\n        \r\n\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}