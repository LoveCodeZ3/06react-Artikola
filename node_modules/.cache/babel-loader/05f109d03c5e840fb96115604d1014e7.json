{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\kaituo\\\\Downloads\\\\06Artikola-administrado-master\\\\src\\\\views\\\\Article\\\\index.js\";\nimport React, { Component } from 'react';\nimport { getArticles, deleteArticle } from '../../requsets';\nimport moment from 'moment'; //显示时间用的\n\nimport XLSX from 'xlsx';\nconst ButtonGroup = _Button.Group;\nconst titleDisplayMap = {\n  id: '编号',\n  title: '标题',\n  author: '作者',\n  createAt: '创作时间',\n  amount: '阅读量'\n};\nexport default class ArticleList extends Component {\n  constructor() {\n    super();\n\n    this.createColumns = columnKeys => {\n      const columns = columnKeys.map(item => {\n        if (item === 'amount') {\n          return {\n            title: titleDisplayMap[item],\n            key: item,\n            render: (text, record) => {\n              const {\n                amount\n              } = record;\n              return React.createElement(_Tooltip, {\n                title: amount > 250 ? '超过250' : '没有超过250',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63\n                },\n                __self: this\n              }, React.createElement(_Tag, {\n                color: amount > 250 ? 'red' : 'green',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 64\n                },\n                __self: this\n              }, record.amount));\n            }\n          };\n        }\n\n        if (item === 'createAt') {\n          return {\n            title: titleDisplayMap[item],\n            key: item,\n            render: (text, record) => {\n              const {\n                createAt\n              } = record;\n              return moment(createAt).format('YYYY年MM月DD日 hh时mm分ss秒');\n            }\n          };\n        }\n\n        return {\n          //这里 要参考  columns   的格式\n          title: titleDisplayMap[item],\n          dataIndex: item,\n          key: item\n        };\n      });\n      columns.push({\n        title: \"操作\",\n        key: 'action',\n        render: (text, record) => {\n          return React.createElement(ButtonGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            size: \"small\",\n            type: \"primary\",\n            onClick: this.toEdit.bind(this, record),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(_Button, {\n            size: \"small\",\n            type: \"danger\",\n            onClick: this.showDeleteArticleModal.bind(this, record),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      });\n      return columns;\n    };\n\n    this.toEdit = record => {\n      //第一种   带着  标题为 id\n      //  this.props.history.push(`/admin/article/edit/${record.title}`)\n      //第二种\n      this.props.history.push({\n        //因为 设计到光标的停留问题   这里的  title  被删除了  获取不到\n        pathname: `/admin/article/edit/${record.id}`,\n        state: {\n          title: record.title\n        }\n      });\n    };\n\n    this.showDeleteArticleModal = record => {\n      this.setState({\n        isShowArticleModal: true,\n        deleteArticletitle: record.title,\n        deleteArticleID: record.id\n      });\n    };\n\n    this.deleteArticletitle = () => {\n      console.log(this.state.deleteArticleID);\n      this.setState({\n        deleteArticleConfirmLoading: true\n      });\n      deleteArticle(this.state.deleteArticleID).then(resp => {\n        _message.success(resp.msg); //这里     是删除 后  是留来当前页  还是返回首页\n\n\n        this.setState({\n          offset: 0\n        }, () => {\n          this.getData();\n        });\n      }).finally(() => {\n        this.setState({\n          deleteArticleConfirmLoading: false,\n          isShowArticleModal: false\n        });\n      });\n    };\n\n    this.quxiaoDELETE = () => {\n      this.setState({\n        isShowArticleModal: false,\n        deleteArticletitle: '',\n        deleteArticleConfirmLoading: false\n      });\n    };\n\n    this.getData = () => {\n      this.setState({\n        isLoading: true\n      });\n      getArticles(this.state.offset, this.state.limited).then(resp => {\n        console.log(resp);\n        const columnKeys = Object.keys(resp.list[0]); //把 json 变成数组字符串\n\n        const columns = this.createColumns(columnKeys);\n        if (!this.updater.isMounted(this)) return;\n        this.setState({\n          total: resp.total,\n          //这是页数\n          dataSource: resp.list,\n          //这里是数据 的改写\n          columns: columns //这是  标题栏\n\n        });\n      }).catch(err => {//错误处理\n      }).finally(() => {\n        if (!this.updater.isMounted(this)) //因为  前面的权限设置  导致 获取不到数据   所以没办法更新数据，所以 用这个个取消一下错误\n          return;\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.onpageChange = (page, pageSize) => {\n      console.log(page, pageSize);\n      this.setState({\n        offset: pageSize * (page - 1),\n        //offset 是页数\n        limited: pageSize\n      }, () => {\n        //回调函数\n        this.getData();\n      });\n    };\n\n    this.onShowSizeChange = (current, size) => {\n      //这里出去喝产品聊得实惠必须仔细问清楚需求，究竟是回到第一页还是留在当前页， 要问清楚\n      this.setState({\n        offset: 0,\n        //offset 是页数\n        limited: size\n      }, () => {\n        //回调函数\n        this.getData();\n      });\n    };\n\n    this.onGetExcel = () => {\n      //看npm.js    然后有个  黄色的 damoe      在找到 jsx 文件   然后  有个exportFile()\n\n      /* convert state to workbook */\n      const data = [Object.keys(this.state.dataSource[0])]; //第一种     但是  keys 不是有序的   不推荐\n      // for( var i= 0 ; i < this.state.dataSource.length ; i++){\n      //         data.push(Object.values(this.state.dataSource[i]))\n      //     }\n      //第二种\n\n      for (var i = 0; i < this.state.dataSource.length; i++) {\n        data.push([this.state.dataSource[i].id, this.state.dataSource[i].title, this.state.dataSource[i].author, this.state.dataSource[i].amount, moment(this.state.dataSource[i].createAt).format('YYYY年MM月DD日 hh时mm分ss秒')]);\n      }\n\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n      /* generate XLSX file and send to client */\n\n      XLSX.writeFile(wb, `articles-${this.state.offset / this.state.limited}-${moment().format('YYYY-MM-DD-HH-mm-ss')}`);\n    };\n\n    this.state = {\n      //这里 都是 antd 的 默认配置  名字不能换\n      //这里是页面显示的dataIndex\n      columns: [],\n      //标题栏\n      dataSource: [],\n      //数据\n      total: 0,\n      //几页\n      isLoading: false,\n      //等待\n      offset: 0,\n      limited: 10,\n      //删除用的\n      deleteArticletitle: null,\n      isShowArticleModal: false,\n      deleteArticleID: null,\n      deleteArticleConfirmLoading: false\n    };\n  } //标题的 渲染\n\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(_Card, {\n      title: \"\\u6587\\u7AE0\\u5217\\u8868\",\n      bordered: false,\n      extra: React.createElement(_Button, {\n        onClick: this.onGetExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"\\u5BFC\\u51FAexcel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      rowKey: record => record.id //没有实质的效果  防止 key 报错   //主键\n      ,\n      dataSource: this.state.dataSource //数据\n      ,\n      columns: this.state.columns //标题栏\n      ,\n      loading: this.state.isLoading //等待\n      ,\n      pagination: {\n        //这个是页数的配置\n        total: this.state.total,\n        hideOnSinglePage: true,\n        onChange: this.onpageChange,\n        showQuickJumper: true,\n        //跳转页\n        showSizeChanger: true,\n        //直接跳转10页\n        onShowSizeChange: this.onShowSizeChange,\n        //每页几条后  要跳转到首页\n        current: this.state.offset / this.state.limited + 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"\\u5220\\u9664\\u4E0D\\u53EF\\u9006\",\n      visible: this.state.isShowArticleModal,\n      onCancel: this.quxiaoDELETE,\n      confirmLoading: this.state.deleteArticleConfirmLoading,\n      onOk: this.deleteArticletitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(_Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"\\u786E\\u5B9A\\u8981\\u5220\\u9664\", React.createElement(\"span\", {\n      style: {\n        color: '#f00'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.state.deleteArticletitle))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/views/Article/index.js"],"names":["React","Component","getArticles","deleteArticle","moment","XLSX","ButtonGroup","Group","titleDisplayMap","id","title","author","createAt","amount","ArticleList","constructor","createColumns","columnKeys","columns","map","item","key","render","text","record","format","dataIndex","push","toEdit","bind","showDeleteArticleModal","props","history","pathname","state","setState","isShowArticleModal","deleteArticletitle","deleteArticleID","console","log","deleteArticleConfirmLoading","then","resp","success","msg","offset","getData","finally","quxiaoDELETE","isLoading","limited","Object","keys","list","updater","isMounted","total","dataSource","catch","err","onpageChange","page","pageSize","onShowSizeChange","current","size","onGetExcel","data","i","length","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","componentDidMount","hideOnSinglePage","onChange","showQuickJumper","showSizeChanger","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport\r\n{\r\n    Card,\r\n    Button\r\n    , Table\r\n    , Tag ,\r\n    Modal,\r\n    Typography,\r\n    message,\r\n    Tooltip\r\n} from 'antd'\r\nimport {getArticles,deleteArticle} from '../../requsets'\r\n\r\nimport   moment from 'moment'  //显示时间用的\r\n\r\nimport  XLSX from 'xlsx'\r\nconst ButtonGroup = Button.Group\r\nconst titleDisplayMap ={\r\n    id:'编号',\r\n    title:'标题',\r\n    author: '作者',\r\n    createAt:'创作时间',\r\n    amount:'阅读量'\r\n}\r\n\r\nexport default class ArticleList extends Component {\r\n\r\n            constructor(){\r\n                super()\r\n                this.state={\r\n                    //这里 都是 antd 的 默认配置  名字不能换\r\n                        //这里是页面显示的dataIndex\r\n                    columns : [],//标题栏\r\n                    dataSource : [ ],//数据\r\n                    total : 0,//几页\r\n                    isLoading:false, //等待\r\n                    offset:0,\r\n                    limited:10,\r\n                    //删除用的\r\n                    deleteArticletitle:null,\r\n                    isShowArticleModal:false,\r\n                    deleteArticleID :null,\r\n                    deleteArticleConfirmLoading:false,\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n                //标题的 渲染\r\n            createColumns = (columnKeys)=>{\r\n                const columns= columnKeys.map(item =>{\r\n                    if( item === 'amount'){\r\n                    return{\r\n                        title: titleDisplayMap[item ],\r\n                        key:item,\r\n                        render:(text,record)=>{\r\n                            const { amount } = record\r\n                        return (\r\n                            <Tooltip title={ amount > 250 ?  '超过250' : '没有超过250'}>\r\n                                <Tag color={amount > 250 ?  'red' :'green'}>{record.amount}</Tag>\r\n                            </Tooltip>\r\n                        )\r\n                        }\r\n                    }\r\n                }\r\n                if( item === 'createAt'){\r\n                    return{\r\n                        title: titleDisplayMap[item ],\r\n                        key:item,\r\n                        render:(text,record)=>{\r\n                            const { createAt } = record\r\n                        return  moment(createAt).format('YYYY年MM月DD日 hh时mm分ss秒')\r\n                        }\r\n                    }\r\n                }\r\n                    return{\r\n                        //这里 要参考  columns   的格式\r\n                        title:titleDisplayMap[item] ,\r\n                        dataIndex :item,\r\n                        key: item\r\n                    }\r\n                })\r\n                columns.push({\r\n                    title :\"操作\",\r\n                    key:'action',\r\n                    render:(text,record)=>{\r\n                        return (\r\n                            <ButtonGroup>\r\n                                <Button size=\"small\" type = \"primary\" onClick = {this.toEdit.bind(this,record)}>编辑</Button>\r\n                                <Button size=\"small\" type = \"danger\" onClick={this.showDeleteArticleModal.bind(this, record)}>删除</Button>\r\n                            </ButtonGroup>\r\n                        )\r\n                    }\r\n\r\n                })\r\n                return columns\r\n            }\r\n\r\n            //编辑       *****\r\n            toEdit = (record) =>{\r\n                //第一种   带着  标题为 id\r\n                //  this.props.history.push(`/admin/article/edit/${record.title}`)\r\n                //第二种\r\n                this.props.history.push({\r\n                    //因为 设计到光标的停留问题   这里的  title  被删除了  获取不到\r\n                    pathname:`/admin/article/edit/${record.id}`,\r\n                    state:{\r\n                        title:record.title\r\n                    }\r\n                })\r\n            }\r\n\r\n   //删除 文章\r\n            showDeleteArticleModal = (record)=>{\r\n                this.setState({\r\n                    isShowArticleModal:true,\r\n                    deleteArticletitle:record.title,\r\n                    deleteArticleID: record.id\r\n                })\r\n            }\r\n            //确定删除\r\n            deleteArticletitle= ()=>{\r\n                console.log(this.state.deleteArticleID)\r\n                this.setState({\r\n                    deleteArticleConfirmLoading:true\r\n                })\r\n                deleteArticle(this.state.deleteArticleID)\r\n                    .then(resp =>{\r\n                        message.success(resp.msg)\r\n                        //这里     是删除 后  是留来当前页  还是返回首页\r\n                        this.setState({\r\n                            offset:0\r\n                        },()=>{\r\n                            this.getData()\r\n                        })\r\n                    })\r\n                    .finally(()=>{\r\n                        this.setState({\r\n                            deleteArticleConfirmLoading:false,\r\n                            isShowArticleModal:false\r\n                        })\r\n                    })\r\n            }\r\n\r\n\r\n            //取消删除\r\n            quxiaoDELETE = () =>{\r\n                this.setState({\r\n                    isShowArticleModal:false,\r\n                    deleteArticletitle:'',\r\n                    deleteArticleConfirmLoading:false\r\n                })\r\n            }\r\n\r\n            //得到数据 跟数据跟随\r\n            getData = () =>{\r\n                this.setState({\r\n                    isLoading: true\r\n                })\r\n                getArticles(this.state.offset, this.state.limited)\r\n                    .then(resp=>{\r\n                    console.log(resp)\r\n                    const columnKeys=Object.keys(resp.list[0]) //把 json 变成数组字符串\r\n                    const columns = this.createColumns(columnKeys)\r\n                        if(!this.updater.isMounted(this))\r\n                        return\r\n                    this.setState({\r\n\r\n                        total : resp.total, //这是页数\r\n                        dataSource: resp.list,//这里是数据 的改写\r\n                        columns : columns,//这是  标题栏\r\n\r\n                    })\r\n                })\r\n                    .catch(err=>{\r\n                        //错误处理\r\n                    })\r\n                    .finally(()=>{\r\n\r\n                        if(!this.updater.isMounted(this))  //因为  前面的权限设置  导致 获取不到数据   所以没办法更新数据，所以 用这个个取消一下错误\r\n                        return\r\n                        this.setState({\r\n                            isLoading:false\r\n                        })\r\n                    })\r\n\r\n            }\r\n            //分页\r\n            onpageChange = (page,pageSize) =>{\r\n                console.log(page,pageSize)\r\n                this.setState({\r\n                    offset:pageSize * (page - 1), //offset 是页数\r\n                    limited:pageSize\r\n                }, ( )=>{ //回调函数\r\n                    this.getData()\r\n                })\r\n            }\r\n\r\n            onShowSizeChange = (current, size ) =>{\r\n                //这里出去喝产品聊得实惠必须仔细问清楚需求，究竟是回到第一页还是留在当前页， 要问清楚\r\n                this.setState({\r\n                    offset:0, //offset 是页数\r\n                    limited:size\r\n                }, ( )=>{ //回调函数\r\n                    this.getData()\r\n                })\r\n            }\r\n\r\n                //Excel表格导出\r\n                onGetExcel=()=>{\r\n\r\n                    //看npm.js    然后有个  黄色的 damoe      在找到 jsx 文件   然后  有个exportFile()\r\n                        /* convert state to workbook */\r\n                const data = [Object.keys(this.state.dataSource[0])]\r\n                //第一种     但是  keys 不是有序的   不推荐\r\n                // for( var i= 0 ; i < this.state.dataSource.length ; i++){\r\n                //         data.push(Object.values(this.state.dataSource[i]))\r\n                //     }\r\n                    //第二种\r\n                    for( var i= 0 ; i < this.state.dataSource.length ; i++){\r\n                            data.push([\r\n                                this.state.dataSource[i].id,\r\n                                this.state.dataSource[i].title,\r\n                                this.state.dataSource[i].author,\r\n                                this.state.dataSource[i].amount,\r\n                                moment(this.state.dataSource[i].createAt).format('YYYY年MM月DD日 hh时mm分ss秒')\r\n                            ])\r\n\r\n                        }\r\n                const ws = XLSX.utils.aoa_to_sheet(data);\r\n                const wb = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n                /* generate XLSX file and send to client */\r\n                XLSX.writeFile(wb,`articles-${this.state.offset / this.state.limited}-${moment().format\r\n                ('YYYY-MM-DD-HH-mm-ss')}`)\r\n                }\r\n\r\n\r\n            componentDidMount(){\r\n            this.getData()\r\n            }\r\n    render() {\r\n        return (\r\n            <Card\r\n            title=\"文章列表\"\r\n            bordered={false}\r\n            extra ={ <Button onClick={this.onGetExcel}>导出excel</Button>}\r\n        >\r\n\r\n                <Table\r\n                rowKey = {record =>record.id}//没有实质的效果  防止 key 报错   //主键\r\n                    dataSource={this.state.dataSource} //数据\r\n                    columns={this.state.columns}//标题栏\r\n                    loading = {this.state.isLoading}//等待\r\n                    pagination={{//这个是页数的配置\r\n                        total:this.state.total,\r\n                        hideOnSinglePage: true,\r\n                        onChange:this.onpageChange,\r\n                        showQuickJumper:true,//跳转页\r\n                        showSizeChanger:true,  //直接跳转10页\r\n                        onShowSizeChange:this.onShowSizeChange, //每页几条后  要跳转到首页\r\n                        current: this.state.offset / this.state.limited +1\r\n                    }}\r\n                />\r\n\r\n                {/* 删除的设置 */}\r\n            <Modal\r\n            title=\"删除不可逆\"\r\n            visible = {this.state.isShowArticleModal}\r\n            onCancel = {this.quxiaoDELETE}\r\n            confirmLoading ={this.state.deleteArticleConfirmLoading}\r\n            onOk = {this.deleteArticletitle}\r\n            >\r\n                <Typography>确定要删除<span style={{color : '#f00'}}>{this.state.deleteArticletitle}</span></Typography>\r\n            </Modal>\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}