{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"C:\\\\Users\\\\kaituo\\\\Downloads\\\\06Artikola-administrado-master\\\\src\\\\App.js\";\n\nimport React, { Component } from 'react';\nimport { adminRoutes } from './routes';\nimport { Switch, Route, Redirect } from 'react-router';\nimport { Frame } from './components';\nimport { connect } from \"react-redux\";\nconst menus = adminRoutes.filter(route => route.isNAv === true); //filter  过滤器  相当于map  但是  必须有一个  键值对  a:true    才能返回这个值\n\nconsole.log(menus);\n\nconst mapState = state => ({\n  isLogin: state.user.isLogin,\n  role: state.user.role\n});\n\nlet App = (_dec = connect(mapState), _dec(_class = class App extends Component {\n  render() {\n    return this.props.isLogin ? React.createElement(Frame, {\n      menus: menus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, adminRoutes.map(route => {\n      return React.createElement(Route, {\n        key: route.pathname,\n        path: route.pathname,\n        exact: route.exact,\n        render: routeProps => {\n          //console.log(route.roles.includes(this.props.role))\n          return (//includes   roles  里边包括的权限值  是否在this.props.role里边\n            route.roles.includes(this.props.role) ? React.createElement(route.component, Object.assign({}, routeProps, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            })) : React.createElement(Redirect, {\n              to: \"/admin/NoAuth\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            })\n          );\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }), React.createElement(Redirect, {\n      to: adminRoutes[0].pathname,\n      from: \"/admin\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/404\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))) : React.createElement(Redirect, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}) || _class);\nexport default App;","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/App.js"],"names":["React","Component","adminRoutes","Switch","Route","Redirect","Frame","connect","menus","filter","route","isNAv","console","log","mapState","state","isLogin","user","role","App","render","props","map","pathname","exact","routeProps","roles","includes"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,cAAtC;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACO,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACC,KAAN,KAAgB,IAA5C,CAAd,C,CAEA;;AACAC,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,MAAMM,QAAQ,GAAGC,KAAK,KAAK;AAEzBC,EAAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWD,OAFK;AAGzBE,EAAAA,IAAI,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAHQ,CAAL,CAAtB;;IAQMC,G,WADLZ,OAAO,CAACO,QAAD,C,gBAAR,MACMK,GADN,SACkBlB,SADlB,CAC4B;AAC1BmB,EAAAA,MAAM,GAAG;AACP,WACE,KAAKC,KAAL,CAAWL,OAAX,GAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAER,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIN,WAAW,CAACoB,GAAZ,CAAgBZ,KAAK,IAAI;AACvB,aACE,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,KAAK,CAACa,QADb;AAEE,QAAA,IAAI,EAAEb,KAAK,CAACa,QAFd;AAGE,QAAA,KAAK,EAAEb,KAAK,CAACc,KAHf;AAIE,QAAA,MAAM,EACHC,UAAD,IAAgB;AACd;AAEA,iBACE;AACAf,YAAAA,KAAK,CAACgB,KAAN,CAAYC,QAAZ,CAAqB,KAAKN,KAAL,CAAWH,IAAhC,IAEE,oBAAC,KAAD,CAAO,SAAP,oBAAqBO,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,GAIE,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAQD,SAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAoBD,KArBD,CAFJ,EA0BE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEvB,WAAW,CAAC,CAAD,CAAX,CAAeqB,QAA7B;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,KAAK,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EA4BE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,MAAb;AAAoB,MAAA,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CADF,CAFF,GAqCE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCJ;AAyCD;;AA3CyB,C;AA8C5B,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {adminRoutes} from './routes'\r\nimport {Switch, Route, Redirect} from 'react-router'\r\nimport {Frame} from './components'\r\nimport {connect} from \"react-redux\"\r\n\r\nconst menus = adminRoutes.filter(route => route.isNAv === true)\r\n\r\n//filter  过滤器  相当于map  但是  必须有一个  键值对  a:true    才能返回这个值\r\nconsole.log(menus)\r\n\r\nconst mapState = state => ({\r\n\r\n  isLogin: state.user.isLogin,\r\n  role: state.user.role\r\n\r\n})\r\n\r\n@connect(mapState)\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      this.props.isLogin\r\n        ?\r\n        <Frame menus={menus}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.pathname}\r\n                    path={route.pathname}\r\n                    exact={route.exact}\r\n                    render={\r\n                      (routeProps) => {\r\n                        //console.log(route.roles.includes(this.props.role))\r\n\r\n                        return (\r\n                          //includes   roles  里边包括的权限值  是否在this.props.role里边\r\n                          route.roles.includes(this.props.role)\r\n                            ?\r\n                            <route.component {...routeProps}/>\r\n                            :\r\n                            <Redirect to=\"/admin/NoAuth\"/>\r\n                        )\r\n                      }\r\n                    }/>\r\n                )\r\n              })\r\n            }\r\n            {/* 设置用户首页 */}\r\n            <Redirect to={adminRoutes[0].pathname} from='/admin' exact/>\r\n            {/* 任何没有配置的路由都是404 */}\r\n            <Redirect to='/404' exact/>\r\n\r\n\r\n          </Switch>\r\n        </Frame>\r\n        :\r\n        <Redirect to=\"/Login\"/>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}