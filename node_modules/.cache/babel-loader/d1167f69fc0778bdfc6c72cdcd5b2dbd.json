{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\kaituo\\\\Downloads\\\\06Artikola-administrado-master\\\\src\\\\views\\\\Article\\\\index.js\";\nimport React, { Component } from 'react';\nimport { getArticles, deleteArticle } from '../../requsets';\nimport moment from 'moment'; //显示时间用的\n\nimport XLSX from 'xlsx';\nconst ButtonGroup = _Button.Group;\nconst titleDisplayMap = {\n  id: '编号',\n  title: '标题',\n  author: '作者',\n  createAt: '创作时间',\n  amount: '阅读量'\n};\nexport default class ArticleList extends Component {\n  constructor() {\n    super();\n\n    this.createColumns = columnKeys => {\n      const columns = columnKeys.map(item => {\n        if (item === 'amount') {\n          return {\n            title: titleDisplayMap[item],\n            key: item,\n            render: (text, record) => {\n              const {\n                amount\n              } = record;\n              return React.createElement(_Tooltip, {\n                title: amount > 250 ? '超过250' : '没有超过250',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 61\n                },\n                __self: this\n              }, React.createElement(_Tag, {\n                color: amount > 250 ? 'red' : 'green',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 62\n                },\n                __self: this\n              }, record.amount));\n            }\n          };\n        }\n\n        if (item === 'createAt') {\n          return {\n            title: titleDisplayMap[item],\n            key: item,\n            render: (text, record) => {\n              const {\n                createAt\n              } = record;\n              return moment(createAt).format('YYYY年MM月DD日 hh时mm分ss秒');\n            }\n          };\n        }\n\n        return {\n          //这里 要参考  columns   的格式\n          title: titleDisplayMap[item],\n          dataIndex: item,\n          key: item\n        };\n      });\n      columns.push({\n        title: \"操作\",\n        key: 'action',\n        render: (text, record) => {\n          return React.createElement(ButtonGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            size: \"small\",\n            type: \"primary\",\n            onClick: this.toEdit.bind(this, record),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(_Button, {\n            size: \"small\",\n            type: \"danger\",\n            onClick: this.showDeleteArticleModal.bind(this, record),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, \"\\u5220\\u9664\"));\n        }\n      });\n      return columns;\n    };\n\n    this.toEdit = record => {\n      //第一种   带着  标题为 id\n      //  this.props.history.push(`/admin/article/edit/${record.title}`)\n      //第二种\n      this.props.history.push({\n        //因为 设计到光标的停留问题   这里的  title  被删除了  获取不到\n        pathname: `/admin/article/edit/${record.id}`,\n        state: {\n          title: record.title\n        }\n      });\n    };\n\n    this.showDeleteArticleModal = record => {\n      this.setState({\n        isShowArticleModal: true,\n        deleteArticletitle: record.title,\n        deleteArticleID: record.id\n      });\n    };\n\n    this.deleteArticletitle = () => {\n      console.log(this.state.deleteArticleID);\n      this.setState({\n        deleteArticleConfirmLoading: true\n      });\n      deleteArticle(this.state.deleteArticleID).then(resp => {\n        _message.success(resp.msg); //这里     是删除 后  是留来当前页  还是返回首页\n\n\n        this.setState({\n          offset: 0\n        }, () => {\n          this.getData();\n        });\n      }).finally(() => {\n        this.setState({\n          deleteArticleConfirmLoading: false,\n          isShowArticleModal: false\n        });\n      });\n    };\n\n    this.quxiaoDELETE = () => {\n      this.setState({\n        isShowArticleModal: false,\n        deleteArticletitle: '',\n        deleteArticleConfirmLoading: false\n      });\n    };\n\n    this.getData = () => {\n      this.setState({\n        isLoading: true\n      });\n      getArticles(this.state.offset, this.state.limited).then(resp => {\n        console.log(resp);\n        const columnKeys = Object.keys(resp.list[0]); //把 json 变成数组字符串\n\n        const columns = this.createColumns(columnKeys);\n        if (!this.updater.isMounted(this)) return;\n        this.setState({\n          total: resp.total,\n          //这是页数\n          dataSource: resp.list,\n          //这里是数据 的改写\n          columns: columns //这是  标题栏\n\n        });\n      }).catch(err => {//错误处理\n      }).finally(() => {\n        if (!this.updater.isMounted(this)) //因为  前面的权限设置  导致 获取不到数据   所以没办法更新数据，所以 用这个个取消一下错误\n          return;\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.onpageChange = (page, pageSize) => {\n      console.log(page, pageSize);\n      this.setState({\n        offset: pageSize * (page - 1),\n        //offset 是页数\n        limited: pageSize\n      }, () => {\n        //回调函数\n        this.getData();\n      });\n    };\n\n    this.onShowSizeChange = (current, size) => {\n      //这里出去喝产品聊得实惠必须仔细问清楚需求，究竟是回到第一页还是留在当前页， 要问清楚\n      this.setState({\n        offset: 0,\n        //offset 是页数\n        limited: size\n      }, () => {\n        //回调函数\n        this.getData();\n      });\n    };\n\n    this.onGetExcel = () => {\n      //看npm.js    然后有个  黄色的 damoe      在找到 jsx 文件   然后  有个exportFile()\n\n      /* convert state to workbook */\n      const data = [Object.keys(this.state.dataSource[0])]; //第一种     但是  keys 不是有序的   不推荐\n      // for( var i= 0 ; i < this.state.dataSource.length ; i++){\n      //         data.push(Object.values(this.state.dataSource[i]))\n      //     }\n      //第二种\n\n      for (var i = 0; i < this.state.dataSource.length; i++) {\n        data.push([this.state.dataSource[i].id, this.state.dataSource[i].title, this.state.dataSource[i].author, this.state.dataSource[i].amount, moment(this.state.dataSource[i].createAt).format('YYYY年MM月DD日 hh时mm分ss秒')]);\n      }\n\n      const ws = XLSX.utils.aoa_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n      /* generate XLSX file and send to client */\n\n      XLSX.writeFile(wb, `articles-${this.state.offset / this.state.limited}-${moment().format('YYYY-MM-DD-HH-mm-ss')}`);\n    };\n\n    this.state = {\n      //这里 都是 antd 的 默认配置  名字不能换\n      //这里是页面显示的dataIndex\n      columns: [],\n      //标题栏\n      dataSource: [],\n      //数据\n      total: 0,\n      //几页\n      isLoading: false,\n      //等待\n      offset: 0,\n      limited: 10,\n      //删除用的\n      deleteArticletitle: null,\n      isShowArticleModal: false,\n      deleteArticleID: null,\n      deleteArticleConfirmLoading: false\n    };\n  } //标题的 渲染\n\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(_Card, {\n      title: \"\\u6587\\u7AE0\\u5217\\u8868\",\n      bordered: false,\n      extra: React.createElement(_Button, {\n        onClick: this.onGetExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"\\u5BFC\\u51FAexcel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      rowKey: record => record.id //没有实质的效果  防止 key 报错   //主键\n      ,\n      dataSource: this.state.dataSource //数据\n      ,\n      columns: this.state.columns //标题栏\n      ,\n      loading: this.state.isLoading //等待\n      ,\n      pagination: {\n        //这个是页数的配置\n        total: this.state.total,\n        hideOnSinglePage: true,\n        onChange: this.onpageChange,\n        showQuickJumper: true,\n        //跳转页\n        showSizeChanger: true,\n        //直接跳转10页\n        onShowSizeChange: this.onShowSizeChange,\n        //每页几条后  要跳转到首页\n        current: this.state.offset / this.state.limited + 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"\\u5220\\u9664\\u4E0D\\u53EF\\u9006\",\n      visible: this.state.isShowArticleModal,\n      onCancel: this.quxiaoDELETE,\n      confirmLoading: this.state.deleteArticleConfirmLoading,\n      onOk: this.deleteArticletitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(_Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"\\u786E\\u5B9A\\u8981\\u5220\\u9664\", React.createElement(\"span\", {\n      style: {\n        color: '#f00'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.state.deleteArticletitle))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/views/Article/index.js"],"names":["React","Component","getArticles","deleteArticle","moment","XLSX","ButtonGroup","Group","titleDisplayMap","id","title","author","createAt","amount","ArticleList","constructor","createColumns","columnKeys","columns","map","item","key","render","text","record","format","dataIndex","push","toEdit","bind","showDeleteArticleModal","props","history","pathname","state","setState","isShowArticleModal","deleteArticletitle","deleteArticleID","console","log","deleteArticleConfirmLoading","then","resp","success","msg","offset","getData","finally","quxiaoDELETE","isLoading","limited","Object","keys","list","updater","isMounted","total","dataSource","catch","err","onpageChange","page","pageSize","onShowSizeChange","current","size","onGetExcel","data","i","length","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","componentDidMount","hideOnSinglePage","onChange","showQuickJumper","showSizeChanger","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport\r\n{\r\n  Card,\r\n  Button\r\n  , Table\r\n  , Tag,\r\n  Modal,\r\n  Typography,\r\n  message,\r\n  Tooltip\r\n} from 'antd'\r\nimport {getArticles, deleteArticle} from '../../requsets'\r\n\r\nimport moment from 'moment'  //显示时间用的\r\n\r\nimport XLSX from 'xlsx'\r\n\r\nconst ButtonGroup = Button.Group\r\nconst titleDisplayMap = {\r\n  id: '编号',\r\n  title: '标题',\r\n  author: '作者',\r\n  createAt: '创作时间',\r\n  amount: '阅读量'\r\n}\r\n\r\nexport default class ArticleList extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      //这里 都是 antd 的 默认配置  名字不能换\r\n      //这里是页面显示的dataIndex\r\n      columns: [],//标题栏\r\n      dataSource: [],//数据\r\n      total: 0,//几页\r\n      isLoading: false, //等待\r\n      offset: 0,\r\n      limited: 10,\r\n      //删除用的\r\n      deleteArticletitle: null,\r\n      isShowArticleModal: false,\r\n      deleteArticleID: null,\r\n      deleteArticleConfirmLoading: false,\r\n\r\n    }\r\n  }\r\n\r\n\r\n  //标题的 渲染\r\n  createColumns = (columnKeys) => {\r\n    const columns = columnKeys.map(item => {\r\n      if (item === 'amount') {\r\n        return {\r\n          title: titleDisplayMap[item],\r\n          key: item,\r\n          render: (text, record) => {\r\n            const {amount} = record\r\n            return (\r\n              <Tooltip title={amount > 250 ? '超过250' : '没有超过250'}>\r\n                <Tag color={amount > 250 ? 'red' : 'green'}>{record.amount}</Tag>\r\n              </Tooltip>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if (item === 'createAt') {\r\n        return {\r\n          title: titleDisplayMap[item],\r\n          key: item,\r\n          render: (text, record) => {\r\n            const {createAt} = record\r\n            return moment(createAt).format('YYYY年MM月DD日 hh时mm分ss秒')\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        //这里 要参考  columns   的格式\r\n        title: titleDisplayMap[item],\r\n        dataIndex: item,\r\n        key: item\r\n      }\r\n    })\r\n    columns.push({\r\n      title: \"操作\",\r\n      key: 'action',\r\n      render: (text, record) => {\r\n        return (\r\n          <ButtonGroup>\r\n            <Button size=\"small\" type=\"primary\" onClick={this.toEdit.bind(this, record)}>编辑</Button>\r\n            <Button size=\"small\" type=\"danger\" onClick={this.showDeleteArticleModal.bind(this, record)}>删除</Button>\r\n          </ButtonGroup>\r\n        )\r\n      }\r\n\r\n    })\r\n    return columns\r\n  }\r\n\r\n  //编辑       *****\r\n  toEdit = (record) => {\r\n    //第一种   带着  标题为 id\r\n    //  this.props.history.push(`/admin/article/edit/${record.title}`)\r\n    //第二种\r\n    this.props.history.push({\r\n      //因为 设计到光标的停留问题   这里的  title  被删除了  获取不到\r\n      pathname: `/admin/article/edit/${record.id}`,\r\n      state: {\r\n        title: record.title\r\n      }\r\n    })\r\n  }\r\n\r\n  //删除 文章\r\n  showDeleteArticleModal = (record) => {\r\n    this.setState({\r\n      isShowArticleModal: true,\r\n      deleteArticletitle: record.title,\r\n      deleteArticleID: record.id\r\n    })\r\n  }\r\n  //确定删除\r\n  deleteArticletitle = () => {\r\n    console.log(this.state.deleteArticleID)\r\n    this.setState({\r\n      deleteArticleConfirmLoading: true\r\n    })\r\n    deleteArticle(this.state.deleteArticleID)\r\n      .then(resp => {\r\n        message.success(resp.msg)\r\n        //这里     是删除 后  是留来当前页  还是返回首页\r\n        this.setState({\r\n          offset: 0\r\n        }, () => {\r\n          this.getData()\r\n        })\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          deleteArticleConfirmLoading: false,\r\n          isShowArticleModal: false\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  //取消删除\r\n  quxiaoDELETE = () => {\r\n    this.setState({\r\n      isShowArticleModal: false,\r\n      deleteArticletitle: '',\r\n      deleteArticleConfirmLoading: false\r\n    })\r\n  }\r\n\r\n  //得到数据 跟数据跟随\r\n  getData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n    getArticles(this.state.offset, this.state.limited)\r\n      .then(resp => {\r\n        console.log(resp)\r\n        const columnKeys = Object.keys(resp.list[0]) //把 json 变成数组字符串\r\n        const columns = this.createColumns(columnKeys)\r\n        if (!this.updater.isMounted(this))\r\n          return\r\n        this.setState({\r\n\r\n          total: resp.total, //这是页数\r\n          dataSource: resp.list,//这里是数据 的改写\r\n          columns: columns,//这是  标题栏\r\n\r\n        })\r\n      })\r\n      .catch(err => {\r\n        //错误处理\r\n      })\r\n      .finally(() => {\r\n\r\n        if (!this.updater.isMounted(this))  //因为  前面的权限设置  导致 获取不到数据   所以没办法更新数据，所以 用这个个取消一下错误\r\n          return\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n      })\r\n\r\n  }\r\n  //分页\r\n  onpageChange = (page, pageSize) => {\r\n    console.log(page, pageSize)\r\n    this.setState({\r\n      offset: pageSize * (page - 1), //offset 是页数\r\n      limited: pageSize\r\n    }, () => { //回调函数\r\n      this.getData()\r\n    })\r\n  }\r\n\r\n  onShowSizeChange = (current, size) => {\r\n    //这里出去喝产品聊得实惠必须仔细问清楚需求，究竟是回到第一页还是留在当前页， 要问清楚\r\n    this.setState({\r\n      offset: 0, //offset 是页数\r\n      limited: size\r\n    }, () => { //回调函数\r\n      this.getData()\r\n    })\r\n  }\r\n\r\n  //Excel表格导出\r\n  onGetExcel = () => {\r\n\r\n    //看npm.js    然后有个  黄色的 damoe      在找到 jsx 文件   然后  有个exportFile()\r\n    /* convert state to workbook */\r\n    const data = [Object.keys(this.state.dataSource[0])]\r\n    //第一种     但是  keys 不是有序的   不推荐\r\n    // for( var i= 0 ; i < this.state.dataSource.length ; i++){\r\n    //         data.push(Object.values(this.state.dataSource[i]))\r\n    //     }\r\n    //第二种\r\n    for (var i = 0; i < this.state.dataSource.length; i++) {\r\n      data.push([\r\n        this.state.dataSource[i].id,\r\n        this.state.dataSource[i].title,\r\n        this.state.dataSource[i].author,\r\n        this.state.dataSource[i].amount,\r\n        moment(this.state.dataSource[i].createAt).format('YYYY年MM月DD日 hh时mm分ss秒')\r\n      ])\r\n\r\n    }\r\n    const ws = XLSX.utils.aoa_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n    /* generate XLSX file and send to client */\r\n    XLSX.writeFile(wb, `articles-${this.state.offset / this.state.limited}-${moment().format\r\n    ('YYYY-MM-DD-HH-mm-ss')}`)\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        title=\"文章列表\"\r\n        bordered={false}\r\n        extra={<Button onClick={this.onGetExcel}>导出excel</Button>}\r\n      >\r\n\r\n        <Table\r\n          rowKey={record => record.id}//没有实质的效果  防止 key 报错   //主键\r\n          dataSource={this.state.dataSource} //数据\r\n          columns={this.state.columns}//标题栏\r\n          loading={this.state.isLoading}//等待\r\n          pagination={{//这个是页数的配置\r\n            total: this.state.total,\r\n            hideOnSinglePage: true,\r\n            onChange: this.onpageChange,\r\n            showQuickJumper: true,//跳转页\r\n            showSizeChanger: true,  //直接跳转10页\r\n            onShowSizeChange: this.onShowSizeChange, //每页几条后  要跳转到首页\r\n            current: this.state.offset / this.state.limited + 1\r\n          }}\r\n        />\r\n\r\n        {/* 删除的设置 */}\r\n        <Modal\r\n          title=\"删除不可逆\"\r\n          visible={this.state.isShowArticleModal}\r\n          onCancel={this.quxiaoDELETE}\r\n          confirmLoading={this.state.deleteArticleConfirmLoading}\r\n          onOk={this.deleteArticletitle}\r\n        >\r\n          <Typography>确定要删除<span style={{color: '#f00'}}>{this.state.deleteArticletitle}</span></Typography>\r\n        </Modal>\r\n      </Card>\r\n\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}