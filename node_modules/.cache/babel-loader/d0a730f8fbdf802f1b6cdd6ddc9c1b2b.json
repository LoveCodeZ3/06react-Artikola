{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"C:\\\\Users\\\\kaituo\\\\Downloads\\\\06Artikola-administrado-master\\\\src\\\\views\\\\Notifications\\\\index.js\";\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { markNotifiactionAsReadById, markAllNotificationRead } from \"../../actions/notifications\"; //获取  reducers里边的  notifications 里边的数据\n\nconst mapState = state => {\n  const {\n    list,\n    isLoading\n  } = state.notifications;\n  return {\n    list,\n    isLoading\n  };\n};\n\nlet Notifications = (_dec = connect(mapState, {\n  markNotifiactionAsReadById,\n  markAllNotificationRead\n}), _dec(_class = class Notifications extends Component {\n  render() {\n    console.log(this.props);\n    return React.createElement(_Spin, {\n      spinning: this.props.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u901A\\u77E5\\u4E2D\\u5FC3.\",\n      bordered: false,\n      extra: React.createElement(_Button, {\n        //disabled ：当全部  读完之后 不能点这个Button\n        disabled: this.props.list.every(item => item.hasRead === true),\n        onClick: this.props.markAllNotificationRead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u5DF2\\u8BFB\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(_List, {\n      itemLayout: \"horizontal\",\n      dataSource: this.props.list // 留消息的名字\n      ,\n      renderItem: item => React.createElement(_List.Item, {\n        extra: item.hasRead ? null : React.createElement(_Button, {\n          onClick: this.props.markNotifiactionAsReadById.bind(this, item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"\\u5DF2\\u8BFB\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(_List.Item.Meta, {\n        avatar: React.createElement(_Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }),\n        title: React.createElement(_Badge, {\n          dot: !item.hasRead,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, item.title),\n        description: item.desc //消息信息\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}) || _class);\nexport default Notifications;","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/views/Notifications/index.js"],"names":["React","Component","connect","markNotifiactionAsReadById","markAllNotificationRead","mapState","state","list","isLoading","notifications","Notifications","render","console","log","props","every","item","hasRead","bind","id","title","desc"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AASA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,0BAAR,EAAoCC,uBAApC,QAAkE,6BAAlE,C,CACA;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFF,KAAK,CAACG,aAHV;AAKA,SAAO;AACLF,IAAAA,IADK;AAELC,IAAAA;AAFK,GAAP;AAID,CAVD;;IAaME,a,WADLR,OAAO,CAACG,QAAD,EAAW;AAACF,EAAAA,0BAAD;AAA6BC,EAAAA;AAA7B,CAAX,C,gBAAR,MACMM,aADN,SAC4BT,SAD5B,CACsC;AACpCU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKA,KAAL,CAAWN,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,2BADR;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,KAAK,EAAE;AACL;AACA,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWP,IAAX,CAAgBQ,KAAhB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,IAA/C,CAFL;AAGL,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWV,uBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,UAAU,EAAE,KAAKU,KAAL,CAAWP,IAFzB,CAE+B;AAF/B;AAGE,MAAA,UAAU,EAAES,IAAI,IACd,0BAAM,IAAN;AACE,QAAA,KAAK,EACHA,IAAI,CAACC,OAAL,GAEE,IAFF,GAIE;AACE,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWX,0BAAX,CAAsCe,IAAtC,CAA2C,IAA3C,EAAiDF,IAAI,CAACG,EAAtD,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaE,0BAAM,IAAN,CAAW,IAAX;AACE,QAAA,MAAM,EAAE;AAAQ,UAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AAEE,QAAA,KAAK,EAAE;AAAO,UAAA,GAAG,EAAE,CAACH,IAAI,CAACC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BD,IAAI,CAACI,KAAjC,CAFT;AAGE,QAAA,WAAW,EAAEJ,IAAI,CAACK,IAHpB,CAG0B;AAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF;AAuCD;;AA1CmC,C;AA6CtC,eAAeX,aAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  List,\r\n  Avatar,\r\n  Badge,\r\n  Spin\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {markNotifiactionAsReadById, markAllNotificationRead} from \"../../actions/notifications\"\r\n//获取  reducers里边的  notifications 里边的数据\r\nconst mapState = state => {\r\n  const {\r\n    list,\r\n    isLoading\r\n  } = state.notifications\r\n\r\n  return {\r\n    list,\r\n    isLoading\r\n  }\r\n}\r\n\r\n@connect(mapState, {markNotifiactionAsReadById, markAllNotificationRead})\r\nclass Notifications extends Component {\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <Spin spinning={this.props.isLoading}>\r\n        <Card\r\n          title=\"通知中心.\"\r\n          bordered={false}\r\n          extra={<Button\r\n            //disabled ：当全部  读完之后 不能点这个Button\r\n            disabled={this.props.list.every(item => item.hasRead === true)}\r\n            onClick={this.props.markAllNotificationRead}\r\n          >全部已读</Button>}\r\n        >\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={this.props.list} // 留消息的名字\r\n            renderItem={item => (\r\n              <List.Item\r\n                extra={\r\n                  item.hasRead\r\n                    ?\r\n                    null\r\n                    :\r\n                    <Button\r\n                      onClick={this.props.markNotifiactionAsReadById.bind(this, item.id)\r\n                      }\r\n                    >\r\n                      已读\r\n                    </Button>}\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"/>}\r\n                  title={<Badge dot={!item.hasRead}>{item.title}</Badge>}\r\n                  description={item.desc} //消息信息\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Card>\r\n      </Spin>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notifications\r\n"]},"metadata":{},"sourceType":"module"}