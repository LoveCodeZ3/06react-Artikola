{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport axios from 'axios';\nconst isDev = process.env.NODE_ENV === 'development'; //用拦截器的 用这个service\n\nconst service = axios.create({\n  baseURL: isDev ? 'http://rap2.taobao.org:38080/app/mock/249769' : ''\n}); //不用拦截器的用这个service1\n\nconst service1 = axios.create({\n  baseURL: isDev ? 'http://rap2.taobao.org:38080/app/mock/249769' : ''\n});\nservice.interceptors.request.use(config => {\n  //请求\n  config.data = Object.assign({}, config.data, {\n    authToken: 'aasdasd'\n  });\n  return config;\n});\nservice.interceptors.response.use(resp => {\n  //返回   有  对 错\n  console.log(resp);\n\n  if (resp.data.code === 200) {\n    return resp.data.data;\n  } else {\n    //全局处理错误\n    _message.error(resp.data.errMsg);\n  }\n}); //得到文章列表\n\nexport const getArticles = (offset = 0, limited = 10) => {\n  return service.post('/api/v1/articleList', {\n    offset,\n    limited\n  });\n}; //通过id  删除 文章\n\nexport const deleteArticle = id => {\n  return service.post(`/api/v1/articleList/delete/${id}`);\n}; //通过id 来获取 文章\n\nexport const getArticleById = id => {\n  return service.post(`/api/v1/article/${id}`);\n}; //保存修改文章\n\nexport const saveArticle = (id, data) => {\n  return service.post(`/api/v1/articlexiugai/${id}`, data);\n}; //获取通知列表\n\nexport const getNotification = () => {\n  return service.post('/api/v1/notifications');\n}; //登录接口\n\nexport const loginRequsets = userInfo => {\n  return service1.post('/api/v1/login', userInfo);\n};","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/requsets/index.js"],"names":["axios","isDev","process","env","NODE_ENV","service","create","baseURL","service1","interceptors","request","use","config","data","Object","assign","authToken","response","resp","console","log","code","error","errMsg","getArticles","offset","limited","post","deleteArticle","id","getArticleById","saveArticle","getNotification","loginRequsets","userInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,MAAMC,KAAK,GAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAArC,C,CAEA;;AACA,MAAMC,OAAO,GAAEL,KAAK,CAACM,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAACN,KAAK,GAAG,8CAAH,GAAoD;AADzC,CAAb,CAAf,C,CAIA;;AAEA,MAAMO,QAAQ,GAAER,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAACN,KAAK,GAAG,8CAAH,GAAoD;AADxC,CAAb,CAAhB;AAIAI,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkCC,MAAD,IAAU;AAAG;AAE1CA,EAAAA,MAAM,CAACC,IAAP,GAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBH,MAAM,CAACC,IAAxB,EAA6B;AACvCG,IAAAA,SAAS,EAAC;AAD6B,GAA7B,CAAd;AAGA,SAAOJ,MAAP;AAEH,CAPD;AASAP,OAAO,CAACI,YAAR,CAAqBQ,QAArB,CAA8BN,GAA9B,CAAmCO,IAAD,IAAQ;AAAE;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAGA,IAAI,CAACL,IAAL,CAAUQ,IAAV,KAAmB,GAAtB,EAA0B;AACtB,WAAOH,IAAI,CAACL,IAAL,CAAUA,IAAjB;AACH,GAFD,MAEK;AACD;AACA,aAAQS,KAAR,CAAeJ,IAAI,CAACL,IAAL,CAAUU,MAAzB;AACH;AACJ,CARD,E,CAWA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,MAAM,GAAG,CAAV,EAAaC,OAAO,GAAC,EAArB,KAA0B;AACjD,SAAOrB,OAAO,CAACsB,IAAR,CAAa,qBAAb,EAAmC;AACtCF,IAAAA,MADsC;AAEtCC,IAAAA;AAFsC,GAAnC,CAAP;AAIH,CALM,C,CAOP;;AAEA,OAAO,MAAME,aAAa,GAAGC,EAAD,IAAO;AAC3B,SAAOxB,OAAO,CAACsB,IAAR,CAAe,8BAA6BE,EAAG,EAA/C,CAAP;AACP,CAFM,C,CAGP;;AACA,OAAO,MAAMC,cAAc,GAAID,EAAD,IAAQ;AAClC,SAAOxB,OAAO,CAACsB,IAAR,CAAc,mBAAkBE,EAAG,EAAnC,CAAP;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAME,WAAW,GAAG,CAACF,EAAD,EAAKhB,IAAL,KAAc;AACrC,SAAOR,OAAO,CAACsB,IAAR,CAAc,yBAAwBE,EAAG,EAAzC,EAA4ChB,IAA5C,CAAP;AACH,CAFM,C,CAGP;;AACA,OAAO,MAAMmB,eAAe,GAAG,MAAI;AAC/B,SAAO3B,OAAO,CAACsB,IAAR,CAAa,uBAAb,CAAP;AACH,CAFM,C,CAIP;;AACC,OAAO,MAAMM,aAAa,GAAIC,QAAD,IAAY;AACtC,SAAO1B,QAAQ,CAACmB,IAAT,CAAc,eAAd,EAA8BO,QAA9B,CAAP;AACF,CAFM","sourcesContent":["import axios from 'axios'\r\n\r\nimport {message} from 'antd'\r\n\r\nconst isDev=process.env.NODE_ENV === 'development'\r\n\r\n//用拦截器的 用这个service\r\nconst service =axios.create({\r\n    baseURL:isDev ? 'http://rap2.taobao.org:38080/app/mock/249769' : ''\r\n})\r\n\r\n//不用拦截器的用这个service1\r\n\r\nconst service1 =axios.create({\r\n    baseURL:isDev ? 'http://rap2.taobao.org:38080/app/mock/249769' : ''\r\n})\r\n\r\nservice.interceptors.request.use((config)=>{  //请求\r\n\r\n    config.data = Object.assign({},config.data,{\r\n        authToken:'aasdasd'\r\n    })\r\n    return config\r\n\r\n})\r\n\r\nservice.interceptors.response.use((resp)=>{ //返回   有  对 错\r\n    console.log(resp)\r\n    if(resp.data.code === 200){\r\n        return resp.data.data\r\n    }else{\r\n        //全局处理错误\r\n        message.error (resp.data.errMsg)\r\n    }\r\n})\r\n\r\n\r\n//得到文章列表\r\nexport const getArticles = (offset = 0, limited=10)=>{\r\n    return service.post('/api/v1/articleList',{\r\n        offset,\r\n        limited\r\n    })\r\n}\r\n\r\n//通过id  删除 文章\r\n\r\nexport const deleteArticle =(id) =>{\r\n        return service.post (`/api/v1/articleList/delete/${id}`)\r\n}\r\n//通过id 来获取 文章\r\nexport const getArticleById = (id) => {\r\n    return service.post(`/api/v1/article/${id}`)\r\n}\r\n\r\n//保存修改文章\r\nexport const saveArticle = (id, data) => {\r\n    return service.post(`/api/v1/articlexiugai/${id}`, data)\r\n}\r\n//获取通知列表\r\nexport const getNotification = ()=>{\r\n    return service.post('/api/v1/notifications')\r\n}\r\n\r\n//登录接口\r\n export const loginRequsets = (userInfo)=>{\r\n    return service1.post('/api/v1/login',userInfo)\r\n }\r\n"]},"metadata":{},"sourceType":"module"}