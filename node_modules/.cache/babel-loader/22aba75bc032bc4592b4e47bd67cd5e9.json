{"ast":null,"code":"import actionTypes from \"./actionType\";\nimport { loginRequsets } from \"../requsets\";\n\nconst startLogin = () => {\n  return {\n    type: actionTypes.START_LOGIN\n  };\n};\n\nconst loginSuccess = userInfo => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload: {\n      userInfo\n    }\n  };\n};\n\nconst loginFailed = () => {\n  window.localStorage.removeItem(\"authToken\");\n  window.sessionStorage.removeItem(\"authToken\");\n  window.localStorage.removeItem(\"userInfo\");\n  window.localStorage.removeItem(\"userInfo\");\n  return {\n    type: actionTypes.LOGIN_FAILEN\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(loginFailed());\n  };\n};\nexport const login = userInfo => {\n  return dispatch => {\n    dispatch(startLogin());\n    loginRequsets(userInfo).then(resp => {\n      console.log(resp.data.code);\n\n      if (resp.data.code === \"200\") {\n        const {\n          authToken,\n          ...userInfo\n        } = resp.data.data;\n\n        if (userInfo.remember === true) {\n          window.localStorage.setItem(\"authToken\", resp.data.data.authToken); // 本地化存储\n\n          window.localStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data));\n        } else {\n          window.sessionStorage.setItem(\"authToken\", resp.data.data.authToken);\n          window.sessionStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data));\n        }\n\n        dispatch(loginSuccess(resp.data.data));\n      } else {\n        dispatch(loginFailed());\n      }\n    });\n  };\n};\nexport const changeAvatar = avatar => {\n  return {\n    type: actionTypes.CHANGE_AVATAR,\n    payload: {\n      avatar\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/actions/user.js"],"names":["actionTypes","loginRequsets","startLogin","type","START_LOGIN","loginSuccess","userInfo","LOGIN_SUCCESS","payload","loginFailed","window","localStorage","removeItem","sessionStorage","LOGIN_FAILEN","logout","dispatch","login","then","resp","console","log","data","code","authToken","remember","setItem","JSON","stringify","changeAvatar","avatar","CHANGE_AVATAR"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,aAA9B;;AACA,MAAMC,UAAU,GAAE,MAAO;AACvB,SAAM;AACJC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADd,GAAN;AAGD,CAJD;;AAMA,MAAMC,YAAY,GAAGC,QAAD,IAAe;AACjC,SAAM;AACJH,IAAAA,IAAI,EAAEH,WAAW,CAACO,aADd;AAEJC,IAAAA,OAAO,EAAC;AACNF,MAAAA;AADM;AAFJ,GAAN;AAMD,CAPD;;AASA,MAAOG,WAAW,GAAC,MAAO;AACxBC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,WAA/B;AACAF,EAAAA,MAAM,CAACG,cAAP,CAAsBD,UAAtB,CAAiC,WAAjC;AACAF,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,UAA/B;AACAF,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,UAA/B;AACA,SAAM;AACJT,IAAAA,IAAI,EAAEH,WAAW,CAACc;AADd,GAAN;AAGD,CARD;;AAUA,OAAO,MAAMC,MAAM,GAAG,MAAK;AACzB,SAAOC,QAAQ,IAAE;AACfA,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAFD;AAGD,CAJM;AAQP,OAAO,MAAMQ,KAAK,GAAGX,QAAD,IAAY;AAC9B,SAAOU,QAAQ,IAAG;AAChBA,IAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;AACAD,IAAAA,aAAa,CAACK,QAAD,CAAb,CACCY,IADD,CACMC,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,IAAtB;;AACA,UAAGJ,IAAI,CAACG,IAAL,CAAUC,IAAV,KAAkB,KAArB,EAA2B;AACzB,cAAM;AACJC,UAAAA,SADI;AAEJ,aAAGlB;AAFC,YAGHa,IAAI,CAACG,IAAL,CAAUA,IAHb;;AAIA,YAAGhB,QAAQ,CAACmB,QAAT,KAAuB,IAA1B,EAA+B;AAC7Bf,UAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,WAA5B,EAAwCP,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeE,SAAvD,EAD6B,CACoC;;AACjEd,UAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,UAA5B,EAAuCC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACG,IAAL,CAAUA,IAAzB,CAAvC;AACD,SAHD,MAGK;AACHZ,UAAAA,MAAM,CAACG,cAAP,CAAsBa,OAAtB,CAA8B,WAA9B,EAA0CP,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeE,SAAzD;AACAd,UAAAA,MAAM,CAACG,cAAP,CAAsBa,OAAtB,CAA8B,UAA9B,EAAyCC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACG,IAAL,CAAUA,IAAzB,CAAzC;AACD;;AACDN,QAAAA,QAAQ,CAACX,YAAY,CAACc,IAAI,CAACG,IAAL,CAAUA,IAAX,CAAb,CAAR;AACD,OAbD,MAcI;AACAN,QAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD;AAEJ,KArBD;AAsBD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMoB,YAAY,GAAGC,MAAD,IAAW;AACpC,SAAO;AACL3B,IAAAA,IAAI,EAACH,WAAW,CAAC+B,aADZ;AAELvB,IAAAA,OAAO,EAAE;AACPsB,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM","sourcesContent":["import actionTypes from \"./actionType\"\r\nimport { loginRequsets } from \"../requsets\"\r\nconst startLogin =( ) => {\r\n  return{\r\n    type: actionTypes.START_LOGIN\r\n  }\r\n}\r\n\r\nconst loginSuccess =(userInfo ) => {\r\n  return{\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    payload:{\r\n      userInfo\r\n    }\r\n  }\r\n}\r\n\r\nconst  loginFailed=( ) => {\r\n  window.localStorage.removeItem(\"authToken\")\r\n  window.sessionStorage.removeItem(\"authToken\")\r\n  window.localStorage.removeItem(\"userInfo\")\r\n  window.localStorage.removeItem(\"userInfo\")\r\n  return{\r\n    type: actionTypes.LOGIN_FAILEN\r\n  }\r\n}\r\n\r\nexport const logout = () =>{\r\n  return dispatch=>{\r\n    dispatch(loginFailed())\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const login =(userInfo)=>{\r\n  return dispatch =>{\r\n    dispatch(startLogin())\r\n    loginRequsets(userInfo)\r\n    .then(resp => {\r\n      console.log(resp.data.code)\r\n      if(resp.data.code=== \"200\"){\r\n        const {\r\n          authToken,\r\n          ...userInfo\r\n        }= resp.data.data\r\n        if(userInfo.remember  === true){\r\n          window.localStorage.setItem(\"authToken\",resp.data.data.authToken)// 本地化存储\r\n          window.localStorage.setItem(\"userInfo\",JSON.stringify(resp.data.data))\r\n        }else{\r\n          window.sessionStorage.setItem(\"authToken\",resp.data.data.authToken)\r\n          window.sessionStorage.setItem(\"userInfo\",JSON.stringify(resp.data.data))\r\n        }\r\n        dispatch(loginSuccess(resp.data.data))\r\n      }\r\n      else{\r\n          dispatch(loginFailed())\r\n        }\r\n\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeAvatar =(avatar) =>{\r\n  return {\r\n    type:actionTypes.CHANGE_AVATAR,\r\n    payload :{\r\n      avatar\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}