{"ast":null,"code":"import actionTypes from \"./actionType\";\nimport { loginRequsets } from \"../requsets\";\n\nconst startLogin = () => {\n  return {\n    type: actionTypes.START_LOGIN\n  };\n};\n\nconst loginSuccess = userInfo => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    payload: {\n      userInfo\n    }\n  };\n};\n\nconst loginFailed = () => {\n  window.localStorage.removeItem(\"authToken\");\n  window.sessionStorage.removeItem(\"authToken\");\n  window.localStorage.removeItem(\"userInfo\");\n  window.localStorage.removeItem(\"userInfo\");\n  return {\n    type: actionTypes.LOGIN_FAILEN\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(loginFailed());\n  };\n};\nexport const login = userInfo => {\n  return dispatch => {\n    dispatch(startLogin());\n    loginRequsets(userInfo).then(resp => {\n      console.log(resp.data.code);\n\n      if (resp.data.code === \"200\") {\n        const {\n          authToken,\n          ...userInfo\n        } = resp.data.data;\n\n        if (userInfo.remember === true) {\n          window.localStorage.setItem(\"authToken\", resp.data.data.authToken); // 本地化存储\n\n          window.localStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data));\n        } else {\n          window.sessionStorage.setItem(\"authToken\", resp.data.data.authToken);\n          window.sessionStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data));\n        }\n\n        dispatch(loginSuccess(resp.data.data));\n      } else {\n        dispatch(loginFailed());\n      }\n    });\n  };\n};\nexport const changeAvatar = avatar => {\n  return {\n    type: actionTypes.CHANGE_AVATAR,\n    payload: {\n      avatar\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/src/actions/user.js"],"names":["actionTypes","loginRequsets","startLogin","type","START_LOGIN","loginSuccess","userInfo","LOGIN_SUCCESS","payload","loginFailed","window","localStorage","removeItem","sessionStorage","LOGIN_FAILEN","logout","dispatch","login","then","resp","console","log","data","code","authToken","remember","setItem","JSON","stringify","changeAvatar","avatar","CHANGE_AVATAR"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAAQC,aAAR,QAA4B,aAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,aADb;AAELC,IAAAA,OAAO,EAAE;AACPF,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPD;;AASA,MAAMG,WAAW,GAAG,MAAM;AACxBC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,WAA/B;AACAF,EAAAA,MAAM,CAACG,cAAP,CAAsBD,UAAtB,CAAiC,WAAjC;AACAF,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,UAA/B;AACAF,EAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,UAA/B;AACA,SAAO;AACLT,IAAAA,IAAI,EAAEH,WAAW,CAACc;AADb,GAAP;AAGD,CARD;;AAUA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAFD;AAGD,CAJM;AAOP,OAAO,MAAMQ,KAAK,GAAIX,QAAD,IAAc;AACjC,SAAOU,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;AACAD,IAAAA,aAAa,CAACK,QAAD,CAAb,CACGY,IADH,CACQC,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,IAAtB;;AACA,UAAIJ,IAAI,CAACG,IAAL,CAAUC,IAAV,KAAmB,KAAvB,EAA8B;AAC5B,cAAM;AACJC,UAAAA,SADI;AAEJ,aAAGlB;AAFC,YAGFa,IAAI,CAACG,IAAL,CAAUA,IAHd;;AAIA,YAAIhB,QAAQ,CAACmB,QAAT,KAAsB,IAA1B,EAAgC;AAC9Bf,UAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,WAA5B,EAAyCP,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeE,SAAxD,EAD8B,CACoC;;AAClEd,UAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACG,IAAL,CAAUA,IAAzB,CAAxC;AACD,SAHD,MAGO;AACLZ,UAAAA,MAAM,CAACG,cAAP,CAAsBa,OAAtB,CAA8B,WAA9B,EAA2CP,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeE,SAA1D;AACAd,UAAAA,MAAM,CAACG,cAAP,CAAsBa,OAAtB,CAA8B,UAA9B,EAA0CC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACG,IAAL,CAAUA,IAAzB,CAA1C;AACD;;AACDN,QAAAA,QAAQ,CAACX,YAAY,CAACc,IAAI,CAACG,IAAL,CAAUA,IAAX,CAAb,CAAR;AACD,OAbD,MAaO;AACLN,QAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD;AAEF,KApBH;AAqBD,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMoB,YAAY,GAAIC,MAAD,IAAY;AACtC,SAAO;AACL3B,IAAAA,IAAI,EAAEH,WAAW,CAAC+B,aADb;AAELvB,IAAAA,OAAO,EAAE;AACPsB,MAAAA;AADO;AAFJ,GAAP;AAMD,CAPM","sourcesContent":["import actionTypes from \"./actionType\"\r\nimport {loginRequsets} from \"../requsets\"\r\n\r\nconst startLogin = () => {\r\n  return {\r\n    type: actionTypes.START_LOGIN\r\n  }\r\n}\r\n\r\nconst loginSuccess = (userInfo) => {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    payload: {\r\n      userInfo\r\n    }\r\n  }\r\n}\r\n\r\nconst loginFailed = () => {\r\n  window.localStorage.removeItem(\"authToken\")\r\n  window.sessionStorage.removeItem(\"authToken\")\r\n  window.localStorage.removeItem(\"userInfo\")\r\n  window.localStorage.removeItem(\"userInfo\")\r\n  return {\r\n    type: actionTypes.LOGIN_FAILEN\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    dispatch(loginFailed())\r\n  }\r\n}\r\n\r\n\r\nexport const login = (userInfo) => {\r\n  return dispatch => {\r\n    dispatch(startLogin())\r\n    loginRequsets(userInfo)\r\n      .then(resp => {\r\n        console.log(resp.data.code)\r\n        if (resp.data.code === \"200\") {\r\n          const {\r\n            authToken,\r\n            ...userInfo\r\n          } = resp.data.data\r\n          if (userInfo.remember === true) {\r\n            window.localStorage.setItem(\"authToken\", resp.data.data.authToken)// 本地化存储\r\n            window.localStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data))\r\n          } else {\r\n            window.sessionStorage.setItem(\"authToken\", resp.data.data.authToken)\r\n            window.sessionStorage.setItem(\"userInfo\", JSON.stringify(resp.data.data))\r\n          }\r\n          dispatch(loginSuccess(resp.data.data))\r\n        } else {\r\n          dispatch(loginFailed())\r\n        }\r\n\r\n      })\r\n  }\r\n}\r\n\r\nexport const changeAvatar = (avatar) => {\r\n  return {\r\n    type: actionTypes.CHANGE_AVATAR,\r\n    payload: {\r\n      avatar\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}