{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.wangEditor = factory();\n})(this, function () {\n  'use strict';\n  /*\n      poly-fill\n  */\n\n  var polyfill = function () {\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function (target, varArgs) {\n        // .length of function is 2\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n    } // IE 中兼容 Element.prototype.matches\n\n\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i = matches.length;\n\n        while (--i >= 0 && matches.item(i) !== this) {}\n\n        return i > -1;\n      };\n    }\n  };\n  /*\n      DOM 操作 API\n  */\n  // 根据 html 代码片段创建 dom 对象\n\n\n  function createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n  } // 是否是 DOM List\n\n\n  function isDOMList(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n      return true;\n    }\n\n    return false;\n  } // 封装 document.querySelectorAll\n\n\n  function querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n\n    if (isDOMList(result)) {\n      return result;\n    } else {\n      return [result];\n    }\n  } // 记录所有的事件绑定\n\n\n  var eventList = []; // 创建构造函数\n\n  function DomElement(selector) {\n    if (!selector) {\n      return;\n    } // selector 本来就是 DomElement 对象，直接返回\n\n\n    if (selector instanceof DomElement) {\n      return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n    var selectorResult = [];\n\n    if (nodeType === 9) {\n      // document 节点\n      selectorResult = [selector];\n    } else if (nodeType === 1) {\n      // 单个 DOM 节点\n      selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n      // DOM List 或者数组\n      selectorResult = selector;\n    } else if (typeof selector === 'string') {\n      // 字符串\n      selector = selector.replace('/\\n/mg', '').trim();\n\n      if (selector.indexOf('<') === 0) {\n        // 如 <div>\n        selectorResult = createElemByHTML(selector);\n      } else {\n        // 如 #id .class\n        selectorResult = querySelectorAll(selector);\n      }\n    }\n\n    var length = selectorResult.length;\n\n    if (!length) {\n      // 空数组\n      return this;\n    } // 加入 DOM 节点\n\n\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      this[i] = selectorResult[i];\n    }\n\n    this.length = length;\n  } // 修改原型\n\n\n  DomElement.prototype = {\n    constructor: DomElement,\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n      var i = void 0;\n\n      for (i = 0; i < this.length; i++) {\n        var elem = this[i];\n        var result = fn.call(elem, elem, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n\n      return this;\n    },\n    // clone\n    clone: function clone(deep) {\n      var cloneList = [];\n      this.forEach(function (elem) {\n        cloneList.push(elem.cloneNode(!!deep));\n      });\n      return $(cloneList);\n    },\n    // 获取第几个元素\n    get: function get(index) {\n      var length = this.length;\n\n      if (index >= length) {\n        index = index % length;\n      }\n\n      return $(this[index]);\n    },\n    // 第一个\n    first: function first() {\n      return this.get(0);\n    },\n    // 最后一个\n    last: function last() {\n      var length = this.length;\n      return this.get(length - 1);\n    },\n    // 绑定事件\n    on: function on(type, selector, fn) {\n      // selector 不为空，证明绑定事件要加代理\n      if (!fn) {\n        fn = selector;\n        selector = null;\n      } // type 是否有多个\n\n\n      var types = [];\n      types = type.split(/\\s+/);\n      return this.forEach(function (elem) {\n        types.forEach(function (type) {\n          if (!type) {\n            return;\n          } // 记录下，方便后面解绑\n\n\n          eventList.push({\n            elem: elem,\n            type: type,\n            fn: fn\n          });\n\n          if (!selector) {\n            // 无代理\n            elem.addEventListener(type, fn);\n            return;\n          } // 有代理\n\n\n          elem.addEventListener(type, function (e) {\n            var target = e.target;\n\n            if (target.matches(selector)) {\n              fn.call(target, e);\n            }\n          });\n        });\n      });\n    },\n    // 取消事件绑定\n    off: function off(type, fn) {\n      return this.forEach(function (elem) {\n        elem.removeEventListener(type, fn);\n      });\n    },\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n      if (val == null) {\n        // 获取值\n        return this[0].getAttribute(key);\n      } else {\n        // 设置值\n        return this.forEach(function (elem) {\n          elem.setAttribute(key, val);\n        });\n      }\n    },\n    // 添加 class\n    addClass: function addClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            return !!item.trim();\n          }); // 添加 class\n\n          if (arr.indexOf(className) < 0) {\n            arr.push(className);\n          } // 修改 elem.class\n\n\n          elem.className = arr.join(' ');\n        } else {\n          elem.className = className;\n        }\n      });\n    },\n    // 删除 class\n    removeClass: function removeClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            item = item.trim(); // 删除 class\n\n            if (!item || item === className) {\n              return false;\n            }\n\n            return true;\n          }); // 修改 elem.class\n\n          elem.className = arr.join(' ');\n        }\n      });\n    },\n    // 修改 css\n    css: function css(key, val) {\n      var currentStyle = key + ':' + val + ';';\n      return this.forEach(function (elem) {\n        var style = (elem.getAttribute('style') || '').trim();\n        var styleArr = void 0,\n            resultArr = [];\n\n        if (style) {\n          // 将 style 按照 ; 拆分为数组\n          styleArr = style.split(';');\n          styleArr.forEach(function (item) {\n            // 对每项样式，按照 : 拆分为 key 和 value\n            var arr = item.split(':').map(function (i) {\n              return i.trim();\n            });\n\n            if (arr.length === 2) {\n              resultArr.push(arr[0] + ':' + arr[1]);\n            }\n          }); // 替换或者新增\n\n          resultArr = resultArr.map(function (item) {\n            if (item.indexOf(key) === 0) {\n              return currentStyle;\n            } else {\n              return item;\n            }\n          });\n\n          if (resultArr.indexOf(currentStyle) < 0) {\n            resultArr.push(currentStyle);\n          } // 结果\n\n\n          elem.setAttribute('style', resultArr.join('; '));\n        } else {\n          // style 无值\n          elem.setAttribute('style', currentStyle);\n        }\n      });\n    },\n    // 显示\n    show: function show() {\n      return this.css('display', 'block');\n    },\n    // 隐藏\n    hide: function hide() {\n      return this.css('display', 'none');\n    },\n    // 获取子节点\n    children: function children() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.children);\n    },\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.childNodes);\n    },\n    // 增加子节点\n    append: function append($children) {\n      return this.forEach(function (elem) {\n        $children.forEach(function (child) {\n          elem.appendChild(child);\n        });\n      });\n    },\n    // 移除当前节点\n    remove: function remove() {\n      return this.forEach(function (elem) {\n        if (elem.remove) {\n          elem.remove();\n        } else {\n          var parent = elem.parentElement;\n          parent && parent.removeChild(elem);\n        }\n      });\n    },\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n      var elem = this[0];\n      var child = $child[0];\n      return elem.contains(child);\n    },\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n      var elem = this[0];\n      return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n      var elem = this[0];\n      return elem.nodeName;\n    },\n    // 从当前元素查找\n    find: function find(selector) {\n      var elem = this[0];\n      return $(elem.querySelectorAll(selector));\n    },\n    // 获取当前元素的 text\n    text: function text(val) {\n      if (!val) {\n        // 获取 text\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n          return '';\n        });\n      } else {\n        // 设置 text\n        return this.forEach(function (elem) {\n          elem.innerHTML = val;\n        });\n      }\n    },\n    // 获取 html\n    html: function html(value) {\n      var elem = this[0];\n\n      if (value == null) {\n        return elem.innerHTML;\n      } else {\n        elem.innerHTML = value;\n        return this;\n      }\n    },\n    // 获取 value\n    val: function val() {\n      var elem = this[0];\n      return elem.value.trim();\n    },\n    // focus\n    focus: function focus() {\n      return this.forEach(function (elem) {\n        elem.focus();\n      });\n    },\n    // parent\n    parent: function parent() {\n      var elem = this[0];\n      return $(elem.parentElement);\n    },\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n      var results = document.querySelectorAll(selector);\n      var length = results.length;\n\n      if (!length) {\n        // 传入的 selector 无效\n        return null;\n      }\n\n      var elem = _currentElem || this[0];\n\n      if (elem.nodeName === 'BODY') {\n        return null;\n      }\n\n      var parent = elem.parentElement;\n      var i = void 0;\n\n      for (i = 0; i < length; i++) {\n        if (parent === results[i]) {\n          // 找到，并返回\n          return $(parent);\n        }\n      } // 继续查找\n\n\n      return this.parentUntil(selector, parent);\n    },\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n      if ($elem.nodeType === 1) {\n        return this[0] === $elem;\n      } else {\n        return this[0] === $elem[0];\n      }\n    },\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n        parent.insertBefore(elem, referenceNode);\n      });\n    },\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n\n        if (parent.lastChild === referenceNode) {\n          // 最后一个元素\n          parent.appendChild(elem);\n        } else {\n          // 不是最后一个元素\n          parent.insertBefore(elem, referenceNode.nextSibling);\n        }\n      });\n    }\n  }; // new 一个对象\n\n  function $(selector) {\n    return new DomElement(selector);\n  } // 解绑所有事件，用于销毁编辑器\n\n\n  $.offAll = function () {\n    eventList.forEach(function (item) {\n      var elem = item.elem;\n      var type = item.type;\n      var fn = item.fn; // 解绑\n\n      elem.removeEventListener(type, fn);\n    });\n  };\n  /*\n      配置信息\n  */\n\n\n  var config = {\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n    // 表情\n    emotions: [{\n      // tab 的标题\n      title: '默认',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        alt: '[坏笑]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n      }, {\n        alt: '[舔屏]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n      }, {\n        alt: '[污]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n      }]\n    }, {\n      // tab 的标题\n      title: '新浪',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n        alt: '[草泥马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n        alt: '[神马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n        alt: '[浮云]'\n      }]\n    }, {\n      // tab 的标题\n      title: 'emoji',\n      // type -> 'emoji' / 'image'\n      type: 'emoji',\n      // content -> 数组\n      content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n    // 编辑区域的 z-index\n    zIndex: 10000,\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n      // text 是插入的文字\n      // link 是插入的链接\n      return true; // 返回 true 即表示成功\n      // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n      // src 即图片的地址\n      return true; // 返回 true 即表示成功\n      // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n      // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      return content;\n    },\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n    },\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n    // 自定义配置 filename\n    uploadFileName: '',\n    // 上传图片的自定义参数\n    uploadImgParams: {// token: 'abcdef12345'\n    },\n    // 上传图片的自定义header\n    uploadImgHeaders: {// 'Accept': 'text/x-json'\n    },\n    // 配置 XHR withCredentials\n    withCredentials: false,\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n    // 上传图片 hook \n    uploadImgHooks: {\n      // customInsert: function (insertLinkImg, result, editor) {\n      //     console.log('customInsert')\n      //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n      //     const data = result.data1 || []\n      //     data.forEach(link => {\n      //         insertLinkImg(link)\n      //     })\n      // },\n      before: function before(xhr, editor, files) {// 图片上传之前触发\n        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n        // return {\n        //     prevent: true,\n        //     msg: '放弃上传'\n        // }\n      },\n      success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n      },\n      fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n      },\n      error: function error(xhr, editor) {// 图片上传出错时触发\n      },\n      timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n      }\n    },\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n  };\n  /*\n      工具\n  */\n  // 和 UA 相关的属性\n\n  var UA = {\n    _ua: navigator.userAgent,\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n      var reg = /webkit/i;\n      return reg.test(this._ua);\n    },\n    // 是否 IE\n    isIE: function isIE() {\n      return 'ActiveXObject' in window;\n    }\n  }; // 遍历对象\n\n  function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result = fn.call(obj, key, obj[key]);\n\n        if (result === false) {\n          break;\n        }\n      }\n    }\n  } // 遍历类数组\n\n\n  function arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n\n    for (i = 0; i < length; i++) {\n      item = fakeArr[i];\n      result = fn.call(fakeArr, item, i);\n\n      if (result === false) {\n        break;\n      }\n    }\n  } // 获取随机数\n\n\n  function getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n  } // 替换 html 特殊字符\n\n\n  function replaceHtmlSymbol(html) {\n    if (html == null) {\n      return '';\n    }\n\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n  } // 返回百分比的格式\n  // 判断是不是 function\n\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n  /*\n      bold-menu\n  */\n  // 构造函数\n\n\n  function Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Bold.prototype = {\n    constructor: Bold,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 bold 命令\n\n\n      editor.cmd.do('bold');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('bold')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      替换多语言\n   */\n\n  var replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n    langArgs.forEach(function (item) {\n      var reg = item.reg;\n      var val = item.val;\n\n      if (reg.test(result)) {\n        result = result.replace(reg, function () {\n          return val;\n        });\n      }\n    });\n    return result;\n  };\n  /*\n      droplist\n  */\n\n\n  var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n  function DropList(menu, opt) {\n    var _this = this; // droplist 所依附的菜单\n\n\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt; // 容器\n\n    var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n    var $title = opt.$title;\n    var titleHtml = void 0;\n\n    if ($title) {\n      // 替换多语言\n      titleHtml = $title.html();\n      titleHtml = replaceLang(editor, titleHtml);\n      $title.html(titleHtml);\n      $title.addClass('w-e-dp-title');\n      $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n    var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n      var $elem = item.$elem; // 替换多语言\n\n      var elemHtml = $elem.html();\n      elemHtml = replaceLang(editor, elemHtml);\n      $elem.html(elemHtml);\n      var value = item.value;\n      var $li = $('<li class=\"w-e-item\"></li>');\n\n      if ($elem) {\n        $li.append($elem);\n        $list.append($li);\n        $li.on('click', function (e) {\n          onClick(value); // 隐藏\n\n          _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n          }, 0);\n        });\n      }\n    }); // 绑定隐藏事件\n\n    $container.on('mouseleave', function (e) {\n      _this.hideTimeoutId = setTimeout(function () {\n        _this.hide();\n      }, 0);\n    }); // 记录属性\n\n    this.$container = $container; // 基本属性\n\n    this._rendered = false;\n    this._show = false;\n  } // 原型\n\n\n  DropList.prototype = {\n    constructor: DropList,\n    // 显示（插入DOM）\n    show: function show() {\n      if (this.hideTimeoutId) {\n        // 清除之前的定时隐藏\n        clearTimeout(this.hideTimeoutId);\n      }\n\n      var menu = this.menu;\n      var $menuELem = menu.$elem;\n      var $container = this.$container;\n\n      if (this._show) {\n        return;\n      }\n\n      if (this._rendered) {\n        // 显示\n        $container.show();\n      } else {\n        // 加入 DOM 之前先定位位置\n        var menuHeight = $menuELem.getSizeData().height || 0;\n        var width = this.opt.width || 100; // 默认为 100\n\n        $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n        $menuELem.append($container);\n        this._rendered = true;\n      } // 修改属性\n\n\n      this._show = true;\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      if (this.showTimeoutId) {\n        // 清除之前的定时显示\n        clearTimeout(this.showTimeoutId);\n      }\n\n      var $container = this.$container;\n\n      if (!this._show) {\n        return;\n      } // 隐藏并需改属性\n\n\n      $container.hide();\n      this._show = false;\n    }\n  };\n  /*\n      menu - header\n  */\n  // 构造函数\n\n  function Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>设置标题</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<h1>H1</h1>'),\n        value: '<h1>'\n      }, {\n        $elem: $('<h2>H2</h2>'),\n        value: '<h2>'\n      }, {\n        $elem: $('<h3>H3</h3>'),\n        value: '<h3>'\n      }, {\n        $elem: $('<h4>H4</h4>'),\n        value: '<h4>'\n      }, {\n        $elem: $('<h5>H5</h5>'),\n        value: '<h5>'\n      }, {\n        $elem: $('<p>正文</p>'),\n        value: '<p>'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 Head 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Head.prototype = {\n    constructor: Head,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if (editor.$textElem.equal($selectionElem)) {\n        // 不能选中多行来设置标题，否则会出现问题\n        // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n        return;\n      }\n\n      editor.cmd.do('formatBlock', value);\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^h/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - fontSize\n  */\n  // 构造函数\n\n  function FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 160,\n      $title: $('<p>字号</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n        value: '1'\n      }, {\n        $elem: $('<span style=\"font-size: small;\">small</span>'),\n        value: '2'\n      }, {\n        $elem: $('<span>normal</span>'),\n        value: '3'\n      }, {\n        $elem: $('<span style=\"font-size: large;\">large</span>'),\n        value: '4'\n      }, {\n        $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n        value: '5'\n      }, {\n        $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n        value: '6'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontSize 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontSize.prototype = {\n    constructor: FontSize,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontSize', value);\n    }\n  };\n  /*\n      menu - fontName\n  */\n  // 构造函数\n\n  function FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 获取配置的字体\n\n    var config = editor.config;\n    var fontNames = config.fontNames || []; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>字体</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: fontNames.map(function (fontName) {\n        return {\n          $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n          value: fontName\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontName 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontName.prototype = {\n    constructor: FontName,\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontName', value);\n    }\n  };\n  /*\n      panel\n  */\n\n  var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n  var _isCreatedPanelMenus = []; // 构造函数\n\n  function Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n  } // 原型\n\n\n  Panel.prototype = {\n    constructor: Panel,\n    // 显示（插入DOM）\n    show: function show() {\n      var _this = this;\n\n      var menu = this.menu;\n\n      if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n        // 该菜单已经创建了 panel 不能再创建\n        return;\n      }\n\n      var editor = menu.editor;\n      var $body = $('body');\n      var $textContainerElem = editor.$textContainerElem;\n      var opt = this.opt; // panel 的容器\n\n      var $container = $('<div class=\"w-e-panel-container\"></div>');\n      var width = opt.width || 300; // 默认 300px\n\n      $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n      var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n      $container.append($closeBtn);\n      $closeBtn.on('click', function () {\n        _this.hide();\n      }); // 准备 tabs 容器\n\n      var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n      var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n      $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n      var height = opt.height;\n\n      if (height) {\n        $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n      } // tabs\n\n\n      var tabs = opt.tabs || [];\n      var tabTitleArr = [];\n      var tabContentArr = [];\n      tabs.forEach(function (tab, tabIndex) {\n        if (!tab) {\n          return;\n        }\n\n        var title = tab.title || '';\n        var tpl = tab.tpl || ''; // 替换多语言\n\n        title = replaceLang(editor, title);\n        tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n        var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n        $tabTitleContainer.append($title);\n        var $content = $(tpl);\n        $tabContentContainer.append($content); // 记录到内存\n\n        $title._index = tabIndex;\n        tabTitleArr.push($title);\n        tabContentArr.push($content); // 设置 active 项\n\n        if (tabIndex === 0) {\n          $title._active = true;\n          $title.addClass('w-e-active');\n        } else {\n          $content.hide();\n        } // 绑定 tab 的事件\n\n\n        $title.on('click', function (e) {\n          if ($title._active) {\n            return;\n          } // 隐藏所有的 tab\n\n\n          tabTitleArr.forEach(function ($title) {\n            $title._active = false;\n            $title.removeClass('w-e-active');\n          });\n          tabContentArr.forEach(function ($content) {\n            $content.hide();\n          }); // 显示当前的 tab\n\n          $title._active = true;\n          $title.addClass('w-e-active');\n          $content.show();\n        });\n      }); // 绑定关闭事件\n\n      $container.on('click', function (e) {\n        // 点击时阻止冒泡\n        e.stopPropagation();\n      });\n      $body.on('click', function (e) {\n        _this.hide();\n      }); // 添加到 DOM\n\n      $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n      tabs.forEach(function (tab, index) {\n        if (!tab) {\n          return;\n        }\n\n        var events = tab.events || [];\n        events.forEach(function (event) {\n          var selector = event.selector;\n          var type = event.type;\n          var fn = event.fn || emptyFn;\n          var $content = tabContentArr[index];\n          $content.find(selector).on(type, function (e) {\n            e.stopPropagation();\n            var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n            if (needToHide) {\n              _this.hide();\n            }\n          });\n        });\n      }); // focus 第一个 elem\n\n      var $inputs = $container.find('input[type=text],textarea');\n\n      if ($inputs.length) {\n        $inputs.get(0).focus();\n      } // 添加到属性\n\n\n      this.$container = $container; // 隐藏其他 panel\n\n      this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n      _isCreatedPanelMenus.push(menu);\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      var menu = this.menu;\n      var $container = this.$container;\n\n      if ($container) {\n        $container.remove();\n      } // 将该 menu 记录中移除\n\n\n      _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n        if (item === menu) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    },\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n      if (!_isCreatedPanelMenus.length) {\n        return;\n      }\n\n      _isCreatedPanelMenus.forEach(function (menu) {\n        var panel = menu.panel || {};\n\n        if (panel.hide) {\n          panel.hide();\n        }\n      });\n    }\n  };\n  /*\n      menu - link\n  */\n  // 构造函数\n\n  function Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Link.prototype = {\n    constructor: Link,\n    // 点击事件\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $linkelem = void 0;\n\n      if (this._active) {\n        // 当前选区在链接里面\n        $linkelem = editor.selection.getSelectionContainerElem();\n\n        if (!$linkelem) {\n          return;\n        } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n        editor.selection.createRangeByElem($linkelem);\n        editor.selection.restoreSelection(); // 显示 panel\n\n        this._createPanel($linkelem.text(), $linkelem.attr('href'));\n      } else {\n        // 当前选区不在链接里面\n        if (editor.selection.isSelectionEmpty()) {\n          // 选区是空的，未选中内容\n          this._createPanel('', '');\n        } else {\n          // 选中内容了\n          this._createPanel(editor.selection.getSelectionText(), '');\n        }\n      }\n    },\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n      var _this = this; // panel 中需要用到的id\n\n\n      var inputLinkId = getRandom('input-link');\n      var inputTextId = getRandom('input-text');\n      var btnOkId = getRandom('btn-ok');\n      var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n      var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n      var panel = new Panel(this, {\n        width: 300,\n        // panel 中可包含多个 tab\n        tabs: [{\n          // tab 的标题\n          title: '链接',\n          // 模板\n          tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n          // 事件绑定\n          events: [// 插入链接\n          {\n            selector: '#' + btnOkId,\n            type: 'click',\n            fn: function fn() {\n              // 执行插入链接\n              var $link = $('#' + inputLinkId);\n              var $text = $('#' + inputTextId);\n              var link = $link.val();\n              var text = $text.val();\n\n              _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, // 删除链接\n          {\n            selector: '#' + btnDelId,\n            type: 'click',\n            fn: function fn() {\n              // 执行删除链接\n              _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        } // tab end\n        ] // tabs end\n\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 删除当前链接\n    _delLink: function _delLink() {\n      if (!this._active) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var selectionText = editor.selection.getSelectionText();\n      editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n      var editor = this.editor;\n      var config = editor.config;\n      var linkCheck = config.linkCheck;\n      var checkResult = true; // 默认为 true\n\n      if (linkCheck && typeof linkCheck === 'function') {\n        checkResult = linkCheck(text, link);\n      }\n\n      if (checkResult === true) {\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n      } else {\n        alert(checkResult);\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      if ($selectionELem.getNodeName() === 'A') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      italic-menu\n  */\n  // 构造函数\n\n  function Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Italic.prototype = {\n    constructor: Italic,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 italic 命令\n\n\n      editor.cmd.do('italic');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('italic')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      redo-menu\n  */\n  // 构造函数\n\n  function Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Redo.prototype = {\n    constructor: Redo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 redo 命令\n\n      editor.cmd.do('redo');\n    }\n  };\n  /*\n      strikeThrough-menu\n  */\n  // 构造函数\n\n  function StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  StrikeThrough.prototype = {\n    constructor: StrikeThrough,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 strikeThrough 命令\n\n\n      editor.cmd.do('strikeThrough');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('strikeThrough')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      underline-menu\n  */\n  // 构造函数\n\n  function Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Underline.prototype = {\n    constructor: Underline,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 underline 命令\n\n\n      editor.cmd.do('underline');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('underline')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      undo-menu\n  */\n  // 构造函数\n\n  function Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Undo.prototype = {\n    constructor: Undo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 undo 命令\n\n      editor.cmd.do('undo');\n    }\n  };\n  /*\n      menu - list\n  */\n  // 构造函数\n\n  function List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>设置列表</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n        value: 'insertOrderedList'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n        value: 'insertUnorderedList'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  List.prototype = {\n    constructor: List,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      editor.selection.restoreSelection();\n\n      if (editor.cmd.queryCommandState(value)) {\n        return;\n      }\n\n      editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if ($selectionElem.getNodeName() === 'LI') {\n        $selectionElem = $selectionElem.parent();\n      }\n\n      if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n        return;\n      }\n\n      if ($selectionElem.equal($textElem)) {\n        // 证明是顶级标签，没有被 <p> 包裹\n        return;\n      }\n\n      var $parent = $selectionElem.parent();\n\n      if ($parent.equal($textElem)) {\n        // $parent 是顶级标签，不能删除\n        return;\n      }\n\n      $selectionElem.insertAfter($parent);\n      $parent.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - justify\n  */\n  // 构造函数\n\n  function Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>对齐方式</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n        value: 'justifyLeft'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n        value: 'justifyCenter'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n        value: 'justifyRight'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Justify.prototype = {\n    constructor: Justify,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do(value);\n    }\n  };\n  /*\n      menu - Forecolor\n  */\n  // 构造函数\n\n  function ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>文字颜色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 ForeColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  ForeColor.prototype = {\n    constructor: ForeColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('foreColor', value);\n    }\n  };\n  /*\n      menu - BackColor\n  */\n  // 构造函数\n\n  function BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>背景色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 BackColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  BackColor.prototype = {\n    constructor: BackColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('backColor', value);\n    }\n  };\n  /*\n      menu - quote\n  */\n  // 构造函数\n\n  function Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Quote.prototype = {\n    constructor: Quote,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n      var nodeName = $selectionElem.getNodeName();\n\n      if (!UA.isIE()) {\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          editor.cmd.do('formatBlock', '<P>');\n        } else {\n          // 转换为 quote\n          editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n\n        return;\n      } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n      var content = void 0,\n          $targetELem = void 0;\n\n      if (nodeName === 'P') {\n        // 将 P 转换为 quote\n        content = $selectionElem.text();\n        $targetELem = $('<blockquote>' + content + '</blockquote>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n        return;\n      }\n\n      if (nodeName === 'BLOCKQUOTE') {\n        // 撤销 quote\n        content = $selectionElem.text();\n        $targetELem = $('<p>' + content + '</p>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n      }\n    },\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^BLOCKQUOTE$/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - code\n  */\n  // 构造函数\n\n  function Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Code.prototype = {\n    constructor: Code,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $startElem = editor.selection.getSelectionStartElem();\n      var $endElem = editor.selection.getSelectionEndElem();\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n      var selectionText = editor.selection.getSelectionText();\n      var $code = void 0;\n\n      if (!$startElem.equal($endElem)) {\n        // 跨元素选择，不做处理\n        editor.selection.restoreSelection();\n        return;\n      }\n\n      if (!isSeleEmpty) {\n        // 选取不是空，用 <code> 包裹即可\n        $code = $('<code>' + selectionText + '</code>');\n        editor.cmd.do('insertElem', $code);\n        editor.selection.createRangeByElem($code, false);\n        editor.selection.restoreSelection();\n        return;\n      } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n      if (this._active) {\n        // 选中状态，将编辑内容\n        this._createPanel($startElem.html());\n      } else {\n        // 未选中状态，将创建内容\n        this._createPanel();\n      }\n    },\n    _createPanel: function _createPanel(value) {\n      var _this = this; // value - 要编辑的内容\n\n\n      value = value || '';\n      var type = !value ? 'new' : 'edit';\n      var textId = getRandom('texxt');\n      var btnId = getRandom('btn');\n      var panel = new Panel(this, {\n        width: 500,\n        // 一个 Panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入代码',\n          // 模板\n          tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n          // 事件绑定\n          events: [// 插入代码\n          {\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textId);\n              var text = $text.val() || $text.html();\n              text = replaceHtmlSymbol(text);\n\n              if (type === 'new') {\n                // 新插入\n                _this._insertCode(text);\n              } else {\n                // 编辑更新\n                _this._updateCode(text);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        } // first tab end\n        ] // tabs end\n\n      }); // new Panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      $selectionELem.html(value);\n      editor.selection.restoreSelection();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $parentElem = $selectionELem.parent();\n\n      if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - emoticon\n  */\n  // 构造函数\n\n  function Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Emoticon.prototype = {\n    constructor: Emoticon,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config; // 获取表情配置\n\n      var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n      var tabConfig = [];\n      emotions.forEach(function (emotData) {\n        var emotType = emotData.type;\n        var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n        var faceHtml = ''; // emoji 表情\n\n        if (emotType === 'emoji') {\n          content.forEach(function (item) {\n            if (item) {\n              faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n          });\n        } // 图片表情\n\n\n        if (emotType === 'image') {\n          content.forEach(function (item) {\n            var src = item.src;\n            var alt = item.alt;\n\n            if (src) {\n              // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n              faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n            }\n          });\n        }\n\n        tabConfig.push({\n          title: emotData.title,\n          tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n          events: [{\n            selector: 'span.w-e-item',\n            type: 'click',\n            fn: function fn(e) {\n              var target = e.target;\n              var $target = $(target);\n              var nodeName = $target.getNodeName();\n              var insertHtml = void 0;\n\n              if (nodeName === 'IMG') {\n                // 插入图片\n                insertHtml = $target.parent().html();\n              } else {\n                // 插入 emoji\n                insertHtml = '<span>' + $target.html() + '</span>';\n              }\n\n              _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        });\n      });\n      var panel = new Panel(this, {\n        width: 300,\n        height: 200,\n        // 一个 Panel 包含多个 tab\n        tabs: tabConfig\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', emotHtml);\n    }\n  };\n  /*\n      menu - table\n  */\n  // 构造函数\n\n  function Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Table.prototype = {\n    constructor: Table,\n    onClick: function onClick() {\n      if (this._active) {\n        // 编辑现有表格\n        this._createEditPanel();\n      } else {\n        // 插入新表格\n        this._createInsertPanel();\n      }\n    },\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n      var _this = this; // 用到的 id\n\n\n      var btnInsertId = getRandom('btn');\n      var textRowNum = getRandom('row');\n      var textColNum = getRandom('col');\n      var panel = new Panel(this, {\n        width: 250,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入表格',\n          // 模板\n          tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n          // 事件绑定\n          events: [{\n            // 点击按钮，插入表格\n            selector: '#' + btnInsertId,\n            type: 'click',\n            fn: function fn() {\n              var rowNum = parseInt($('#' + textRowNum).val());\n              var colNum = parseInt($('#' + textColNum).val());\n\n              if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                // form 数据有效\n                _this._insert(rowNum, colNum);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        } // first tab end\n        ] // tabs end\n\n      }); // panel end\n      // 展示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n      // 拼接 table 模板\n      var r = void 0,\n          c = void 0;\n      var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n      for (r = 0; r < rowNum; r++) {\n        html += '<tr>';\n\n        if (r === 0) {\n          for (c = 0; c < colNum; c++) {\n            html += '<th>&nbsp;</th>';\n          }\n        } else {\n          for (c = 0; c < colNum; c++) {\n            html += '<td>&nbsp;</td>';\n          }\n        }\n\n        html += '</tr>';\n      }\n\n      html += '</table><p><br></p>'; // 执行命令\n\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n      editor.cmd.do('enableObjectResizing', false);\n      editor.cmd.do('enableInlineTableEditing', false);\n    },\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n      var _this2 = this; // 可用的 id\n\n\n      var addRowBtnId = getRandom('add-row');\n      var addColBtnId = getRandom('add-col');\n      var delRowBtnId = getRandom('del-row');\n      var delColBtnId = getRandom('del-col');\n      var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n      var panel = new Panel(this, {\n        width: 320,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '编辑表格',\n          // 模板\n          tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n          // 事件绑定\n          events: [{\n            // 增加行\n            selector: '#' + addRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 增加列\n            selector: '#' + addColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除行\n            selector: '#' + delRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除列\n            selector: '#' + delColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除表格\n            selector: '#' + delTableBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]\n      }); // 显示 panel\n\n      panel.show();\n    },\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n      var result = {};\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName !== 'TD' && nodeName !== 'TH') {\n        return;\n      } // 获取 td index\n\n\n      var $tr = $selectionELem.parent();\n      var $tds = $tr.children();\n      var tdLength = $tds.length;\n      $tds.forEach(function (td, index) {\n        if (td === $selectionELem[0]) {\n          // 记录并跳出循环\n          result.td = {\n            index: index,\n            elem: td,\n            length: tdLength\n          };\n          return false;\n        }\n      }); // 获取 tr index\n\n      var $tbody = $tr.parent();\n      var $trs = $tbody.children();\n      var trLength = $trs.length;\n      $trs.forEach(function (tr, index) {\n        if (tr === $tr[0]) {\n          // 记录并跳出循环\n          result.tr = {\n            index: index,\n            elem: tr,\n            length: trLength\n          };\n          return false;\n        }\n      }); // 返回结果\n\n      return result;\n    },\n    // 增加行\n    _addRow: function _addRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      var tdData = locationData.td;\n      var tdLength = tdData.length; // 拼接即将插入的字符串\n\n      var newTr = document.createElement('tr');\n      var tpl = '',\n          i = void 0;\n\n      for (i = 0; i < tdLength; i++) {\n        tpl += '<td>&nbsp;</td>';\n      }\n\n      newTr.innerHTML = tpl; // 插入\n\n      $(newTr).insertAfter($currentTr);\n    },\n    // 增加列\n    _addCol: function _addCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex);\n        var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n        var newTd = document.createElement(name);\n        $(newTd).insertAfter($currentTd);\n      });\n    },\n    // 删除行\n    _delRow: function _delRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      $currentTr.remove();\n    },\n    // 删除列\n    _delCol: function _delCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex); // 删除\n\n        $currentTd.remove();\n      });\n    },\n    // 删除表格\n    _delTable: function _delTable() {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $table = $selectionELem.parentUntil('table');\n\n      if (!$table) {\n        return;\n      }\n\n      $table.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName === 'TD' || nodeName === 'TH') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - video\n  */\n  // 构造函数\n\n  function Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Video.prototype = {\n    constructor: Video,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this; // 创建 id\n\n\n      var textValId = getRandom('text-val');\n      var btnId = getRandom('btn'); // 创建 panel\n\n      var panel = new Panel(this, {\n        width: 350,\n        // 一个 panel 多个 tab\n        tabs: [{\n          // 标题\n          title: '插入视频',\n          // 模板\n          tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n          // 事件绑定\n          events: [{\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textValId);\n              var val = $text.val().trim(); // 测试用视频地址\n              // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n              if (val) {\n                // 插入视频\n                _this._insert(val);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        } // first tab end\n        ] // tabs end\n\n      }); // panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入视频\n    _insert: function _insert(val) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n  };\n  /*\n      menu - img\n  */\n  // 构造函数\n\n  function Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Image.prototype = {\n    constructor: Image,\n    onClick: function onClick() {\n      var editor = this.editor;\n      var config = editor.config;\n\n      if (config.qiniu) {\n        return;\n      }\n\n      if (this._active) {\n        this._createEditPanel();\n      } else {\n        this._createInsertPanel();\n      }\n    },\n    _createEditPanel: function _createEditPanel() {\n      var editor = this.editor; // id\n\n      var width30 = getRandom('width-30');\n      var width50 = getRandom('width-50');\n      var width100 = getRandom('width-100');\n      var delBtn = getRandom('del-btn'); // tab 配置\n\n      var tabsConfig = [{\n        title: '编辑图片',\n        tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n        events: [{\n          selector: '#' + width30,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '30%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width50,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '50%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width100,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '100%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + delBtn,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.remove();\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }]\n      }]; // 创建 panel 并显示\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfig\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    _createInsertPanel: function _createInsertPanel() {\n      var editor = this.editor;\n      var uploadImg = editor.uploadImg;\n      var config = editor.config; // id\n\n      var upTriggerId = getRandom('up-trigger');\n      var upFileId = getRandom('up-file');\n      var linkUrlId = getRandom('link-url');\n      var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n      var tabsConfig = [{\n        title: '上传图片',\n        tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n        events: [{\n          // 触发选择图片\n          selector: '#' + upTriggerId,\n          type: 'click',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (fileElem) {\n              fileElem.click();\n            } else {\n              // 返回 true 可关闭 panel\n              return true;\n            }\n          }\n        }, {\n          // 选择图片完毕\n          selector: '#' + upFileId,\n          type: 'change',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (!fileElem) {\n              // 返回 true 可关闭 panel\n              return true;\n            } // 获取选中的 file 对象列表\n\n\n            var fileList = fileElem.files;\n\n            if (fileList.length) {\n              uploadImg.uploadImg(fileList);\n            } // 返回 true 可关闭 panel\n\n\n            return true;\n          }\n        }]\n      }, // first tab end\n      {\n        title: '网络图片',\n        tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n        events: [{\n          selector: '#' + linkBtnId,\n          type: 'click',\n          fn: function fn() {\n            var $linkUrl = $('#' + linkUrlId);\n            var url = $linkUrl.val().trim();\n\n            if (url) {\n              uploadImg.insertLinkImg(url);\n            } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n            return true;\n          }\n        }]\n      } // second tab end\n      ]; // tabs end\n      // 判断 tabs 的显示\n\n      var tabsConfigResult = [];\n\n      if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n        // 显示“上传图片”\n        tabsConfigResult.push(tabsConfig[0]);\n      }\n\n      if (config.showLinkImg) {\n        // 显示“网络图片”\n        tabsConfigResult.push(tabsConfig[1]);\n      } // 创建 panel 并显示\n\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfigResult\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor._selectedImg) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      所有菜单的汇总\n  */\n  // 存储菜单的构造函数\n\n  var MenuConstructors = {};\n  MenuConstructors.bold = Bold;\n  MenuConstructors.head = Head;\n  MenuConstructors.fontSize = FontSize;\n  MenuConstructors.fontName = FontName;\n  MenuConstructors.link = Link;\n  MenuConstructors.italic = Italic;\n  MenuConstructors.redo = Redo;\n  MenuConstructors.strikeThrough = StrikeThrough;\n  MenuConstructors.underline = Underline;\n  MenuConstructors.undo = Undo;\n  MenuConstructors.list = List;\n  MenuConstructors.justify = Justify;\n  MenuConstructors.foreColor = ForeColor;\n  MenuConstructors.backColor = BackColor;\n  MenuConstructors.quote = Quote;\n  MenuConstructors.code = Code;\n  MenuConstructors.emoticon = Emoticon;\n  MenuConstructors.table = Table;\n  MenuConstructors.video = Video;\n  MenuConstructors.image = Image;\n  /*\n      菜单集合\n  */\n  // 构造函数\n\n  function Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n  } // 修改原型\n\n\n  Menus.prototype = {\n    constructor: Menus,\n    // 初始化菜单\n    init: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config || {};\n      var configMenus = config.menus || []; // 获取配置中的菜单\n      // 根据配置信息，创建菜单\n\n      configMenus.forEach(function (menuKey) {\n        var MenuConstructor = MenuConstructors[menuKey];\n\n        if (MenuConstructor && typeof MenuConstructor === 'function') {\n          // 创建单个菜单\n          _this.menus[menuKey] = new MenuConstructor(editor);\n        }\n      }); // 添加到菜单栏\n\n      this._addToToolbar(); // 绑定事件\n\n\n      this._bindEvent();\n    },\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n      var editor = this.editor;\n      var $toolbarElem = editor.$toolbarElem;\n      var menus = this.menus;\n      var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n      var zIndex = config.zIndex + 1;\n      objForEach(menus, function (key, menu) {\n        var $elem = menu.$elem;\n\n        if ($elem) {\n          // 设置 z-index\n          $elem.css('z-index', zIndex);\n          $toolbarElem.append($elem);\n        }\n      });\n    },\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n      var menus = this.menus;\n      var editor = this.editor;\n      objForEach(menus, function (key, menu) {\n        var type = menu.type;\n\n        if (!type) {\n          return;\n        }\n\n        var $elem = menu.$elem;\n        var droplist = menu.droplist;\n        var panel = menu.panel; // 点击类型，例如 bold\n\n        if (type === 'click' && menu.onClick) {\n          $elem.on('click', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            }\n\n            menu.onClick(e);\n          });\n        } // 下拉框，例如 head\n\n\n        if (type === 'droplist' && droplist) {\n          $elem.on('mouseenter', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 显示\n\n\n            droplist.showTimeoutId = setTimeout(function () {\n              droplist.show();\n            }, 200);\n          }).on('mouseleave', function (e) {\n            // 隐藏\n            droplist.hideTimeoutId = setTimeout(function () {\n              droplist.hide();\n            }, 0);\n          });\n        } // 弹框类型，例如 link\n\n\n        if (type === 'panel' && menu.onClick) {\n          $elem.on('click', function (e) {\n            e.stopPropagation();\n\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 在自定义事件中显示 panel\n\n\n            menu.onClick(e);\n          });\n        }\n      });\n    },\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n      var menus = this.menus;\n      objForEach(menus, function (key, menu) {\n        if (menu.tryChangeActive) {\n          setTimeout(function () {\n            menu.tryChangeActive();\n          }, 100);\n        }\n      });\n    }\n  };\n  /*\n      粘贴信息的处理\n  */\n  // 获取粘贴的纯文本\n\n  function getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n  } // 获取粘贴的html\n\n\n  function getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n      pasteHtml = clipboardData.getData('text/html');\n    }\n\n    if (!pasteHtml && pasteText) {\n      pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n\n    if (!pasteHtml) {\n      return;\n    } // 过滤word中状态过来的无用字符\n\n\n    var docSplitHtml = pasteHtml.split('</html>');\n\n    if (docSplitHtml.length === 2) {\n      pasteHtml = docSplitHtml[0];\n    } // 过滤无用标签\n\n\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n      // 忽略图片\n      pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n      // 过滤样式\n      pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n      // 保留样式\n      pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n  } // 获取粘贴的图片文件\n\n\n  function getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n\n    if (txt) {\n      // 有文字，就忽略图片\n      return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n\n    if (!items) {\n      return result;\n    }\n\n    objForEach(items, function (key, value) {\n      var type = value.type;\n\n      if (/image/i.test(type)) {\n        result.push(value.getAsFile());\n      }\n    });\n    return result;\n  }\n  /*\n      编辑区域\n  */\n  // 获取一个 elem.childNodes 的 JSON 数据\n\n\n  function getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n    $children.forEach(function (curElem) {\n      var elemResult = void 0;\n      var nodeType = curElem.nodeType; // 文本节点\n\n      if (nodeType === 3) {\n        elemResult = curElem.textContent;\n        elemResult = replaceHtmlSymbol(elemResult);\n      } // 普通 DOM 节点\n\n\n      if (nodeType === 1) {\n        elemResult = {}; // tag\n\n        elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n        var attrData = [];\n        var attrList = curElem.attributes || {};\n        var attrListLength = attrList.length || 0;\n\n        for (var i = 0; i < attrListLength; i++) {\n          var attr = attrList[i];\n          attrData.push({\n            name: attr.name,\n            value: attr.value\n          });\n        }\n\n        elemResult.attrs = attrData; // children（递归）\n\n        elemResult.children = getChildrenJSON($(curElem));\n      }\n\n      result.push(elemResult);\n    });\n    return result;\n  } // 构造函数\n\n\n  function Text(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Text.prototype = {\n    constructor: Text,\n    // 初始化\n    init: function init() {\n      // 绑定事件\n      this._bindEvent();\n    },\n    // 清空内容\n    clear: function clear() {\n      this.html('<p><br></p>');\n    },\n    // 获取 设置 html\n    html: function html(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var html = void 0;\n\n      if (val == null) {\n        html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        html = html.replace(/\\u200b/gm, '');\n        return html;\n      } else {\n        $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 获取 JSON\n    getJSON: function getJSON() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      return getChildrenJSON($textElem);\n    },\n    // 获取 设置 text\n    text: function text(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var text = void 0;\n\n      if (val == null) {\n        text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        text = text.replace(/\\u200b/gm, '');\n        return text;\n      } else {\n        $textElem.text('<p>' + val + '</p>'); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 追加内容\n    append: function append(html) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n      editor.initSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // 实时保存选取\n      this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n      this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n      this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n      this._pasteHandle(); // tab 特殊处理\n\n\n      this._tabHandle(); // img 点击\n\n\n      this._imgHandle(); // 拖拽事件\n\n\n      this._dragHandle();\n    },\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 保存当前的选区\n\n      function saveRange(e) {\n        // 随时保存选区\n        editor.selection.saveRange(); // 更新按钮 ative 状态\n\n        editor.menus.changeActive();\n      } // 按键后保存\n\n\n      $textElem.on('keyup', saveRange);\n      $textElem.on('mousedown', function (e) {\n        // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n        $textElem.on('mouseleave', saveRange);\n      });\n      $textElem.on('mouseup', function (e) {\n        saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n        $textElem.off('mouseleave', saveRange);\n      });\n    },\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      function insertEmptyP($selectionElem) {\n        var $p = $('<p><br></p>');\n        $p.insertBefore($selectionElem);\n        editor.selection.createRangeByElem($p, true);\n        editor.selection.restoreSelection();\n        $selectionElem.remove();\n      } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n      function pHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionElem.parent();\n\n        if ($parentElem.html() === '<code><br></code>') {\n          // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n          // 而且继续回车跳不出去，因此只能特殊处理\n          insertEmptyP($selectionElem);\n          return;\n        }\n\n        if (!$parentElem.equal($textElem)) {\n          // 不是顶级标签\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName();\n\n        if (nodeName === 'P') {\n          // 当前的标签是 P ，不用做处理\n          return;\n        }\n\n        if ($selectionElem.text()) {\n          // 有内容，不做处理\n          return;\n        } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n        insertEmptyP($selectionElem);\n      }\n\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          return;\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        pHandle(e);\n      }); // <pre><code></code></pre> 回车时 特殊处理\n\n      function codeHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n          // 不符合要求 忽略\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n        if (editor._willBreakCode === true) {\n          // 此时可以跳出代码块\n          // 插入 <p> ，并将选取定位到 <p>\n          var $p = $('<p><br></p>');\n          $p.insertAfter($parentElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection(); // 修改状态\n\n          editor._willBreakCode = false;\n          e.preventDefault();\n          return;\n        }\n\n        var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n        editor.cmd.do('insertHTML', '\\n');\n        editor.selection.saveRange();\n\n        if (editor.selection.getRange().startOffset === _startOffset) {\n          // 没起作用，再来一遍\n          editor.cmd.do('insertHTML', '\\n');\n        }\n\n        var codeLength = $selectionElem.html().length;\n\n        if (editor.selection.getRange().startOffset + 1 === codeLength) {\n          // 说明光标在代码最后的位置，执行了回车操作\n          // 记录下来，以便下次回车时候跳出 code\n          editor._willBreakCode = true;\n        } // 阻止默认行为\n\n\n        e.preventDefault();\n      }\n\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          // 取消即将跳转代码块的记录\n          editor._willBreakCode = false;\n          return;\n        } // <pre><code></code></pre> 回车时 特殊处理\n\n\n        codeHandle(e);\n      });\n    },\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var txtHtml = $textElem.html().toLowerCase().trim();\n\n        if (txtHtml === '<p><br></p>') {\n          // 最后剩下一个空行，就不再删除了\n          e.preventDefault();\n          return;\n        }\n      });\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var $p = void 0;\n        var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n        if (!txtHtml || txtHtml === '<br>') {\n          // 内容空了\n          $p = $('<p><br/></p>');\n          $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n          $textElem.append($p);\n          editor.selection.createRangeByElem($p, false, true);\n          editor.selection.restoreSelection();\n        }\n      });\n    },\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n      var editor = this.editor;\n      var config = editor.config;\n      var pasteFilterStyle = config.pasteFilterStyle;\n      var pasteTextHandle = config.pasteTextHandle;\n      var ignoreImg = config.pasteIgnoreImg;\n      var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n      // 判断该次粘贴事件是否可以执行\n\n      var pasteTime = 0;\n\n      function canDo() {\n        var now = Date.now();\n        var flag = false;\n\n        if (now - pasteTime >= 100) {\n          // 间隔大于 100 ms ，可以执行\n          flag = true;\n        }\n\n        pasteTime = now;\n        return flag;\n      }\n\n      function resetTime() {\n        pasteTime = 0;\n      } // 粘贴文字\n\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          // 阻止默认行为，使用 execCommand 的粘贴命令\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的文字\n\n\n        var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n        var pasteText = getPasteText(e);\n        pasteText = pasteText.replace(/\\n/gm, '<br>');\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n          return;\n        } // 先放开注释，有问题再追查 ————\n        // // 表格中忽略，可能会出现异常问题\n        // if (nodeName === 'TD' || nodeName === 'TH') {\n        //     return\n        // }\n\n\n        if (!pasteHtml) {\n          // 没有内容，可继续执行下面的图片粘贴\n          resetTime();\n          return;\n        }\n\n        try {\n          // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n          // 因此执行 insertHTML 会报错\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n          }\n\n          editor.cmd.do('insertHTML', pasteHtml);\n        } catch (ex) {\n          // 此时使用 pasteText 来兼容一下\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n        }\n      }); // 粘贴图片\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的图片\n\n\n        var pasteFiles = getPasteImgs(e);\n\n        if (!pasteFiles || !pasteFiles.length) {\n          return;\n        } // 获取当前的元素\n\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(pasteFiles);\n      });\n    },\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 9) {\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        }\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n          // <pre><code> 里面\n          editor.cmd.do('insertHTML', '    ');\n        } else {\n          // 普通文字\n          editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n        }\n\n        e.preventDefault();\n      });\n    },\n    // img 点击\n    _imgHandle: function _imgHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n      $textElem.on('click', 'img', function (e) {\n        var img = this;\n        var $img = $(img);\n\n        if ($img.attr('data-w-e') === '1') {\n          // 是表情图片，忽略\n          return;\n        } // 记录当前点击过的图片\n\n\n        editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n        editor.selection.createRangeByElem($img);\n        editor.selection.restoreSelection();\n      }); // 去掉图片的 selected 样式\n\n      $textElem.on('click  keyup', function (e) {\n        if (e.target.matches('img')) {\n          // 点击的是图片，忽略\n          return;\n        } // 删除记录\n\n\n        editor._selectedImg = null;\n      });\n    },\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n      var editor = this.editor; // 禁用 document 拖拽事件\n\n      var $document = $(document);\n      $document.on('dragleave drop dragenter dragover', function (e) {\n        e.preventDefault();\n      }); // 添加编辑区域拖拽事件\n\n      var $textElem = editor.$textElem;\n      $textElem.on('drop', function (e) {\n        e.preventDefault();\n        var files = e.dataTransfer && e.dataTransfer.files;\n\n        if (!files || !files.length) {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(files);\n      });\n    }\n  };\n  /*\n      命令，封装 document.execCommand\n  */\n  // 构造函数\n\n  function Command(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Command.prototype = {\n    constructor: Command,\n    // 执行命令\n    do: function _do(name, value) {\n      var editor = this.editor; // 使用 styleWithCSS\n\n      if (!editor._useStyleWithCSS) {\n        document.execCommand('styleWithCSS', null, true);\n        editor._useStyleWithCSS = true;\n      } // 如果无选区，忽略\n\n\n      if (!editor.selection.getRange()) {\n        return;\n      } // 恢复选取\n\n\n      editor.selection.restoreSelection(); // 执行\n\n      var _name = '_' + name;\n\n      if (this[_name]) {\n        // 有自定义事件\n        this[_name](value);\n      } else {\n        // 默认 command\n        this._execCommand(name, value);\n      } // 修改菜单状态\n\n\n      editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n      editor.selection.saveRange();\n      editor.selection.restoreSelection(); // 触发 onchange\n\n      editor.change && editor.change();\n    },\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html);\n      } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        range.insertNode($(html)[0]);\n      } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html);\n      }\n    },\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode($elem[0]);\n      }\n    },\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n      document.execCommand(name, false, value);\n    },\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n      return document.queryCommandValue(name);\n    },\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n      return document.queryCommandState(name);\n    },\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n      return document.queryCommandSupported(name);\n    }\n  };\n  /*\n      selection range API\n  */\n  // 构造函数\n\n  function API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n  } // 修改原型\n\n\n  API.prototype = {\n    constructor: API,\n    // 获取 range 对象\n    getRange: function getRange() {\n      return this._currentRange;\n    },\n    // 保存选区\n    saveRange: function saveRange(_range) {\n      if (_range) {\n        // 保存已有选区\n        this._currentRange = _range;\n        return;\n      } // 获取当前的选区\n\n\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return;\n      }\n\n      var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n      var $containerElem = this.getSelectionContainerElem(range);\n\n      if (!$containerElem) {\n        return;\n      } // 判断选区内容是否在不可编辑区域之内\n\n\n      if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      if ($textElem.isContain($containerElem)) {\n        // 是编辑内容之内的\n        this._currentRange = range;\n      }\n    },\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n      if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n      }\n\n      var range = this._currentRange;\n\n      if (range) {\n        range.collapse(toStart);\n      }\n    },\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n      var range = this._currentRange;\n\n      if (range) {\n        return this._currentRange.toString();\n      } else {\n        return '';\n      }\n    },\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n      var range = this._currentRange;\n\n      if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n          if (range.startOffset === range.endOffset) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(this._currentRange);\n    },\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n      var editor = this.editor;\n      var range = this.getRange();\n      var $elem = void 0;\n\n      if (!range) {\n        // 当前无 range\n        return;\n      }\n\n      if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return;\n      }\n\n      try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n          // 插入 &#8203\n          editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n          range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n          this.saveRange(range);\n        } else {\n          $elem = $('<strong>&#8203;</strong>');\n          editor.cmd.do('insertElem', $elem);\n          this.createRangeByElem($elem, true);\n        }\n      } catch (ex) {// 部分情况下会报错，兼容一下\n      }\n    },\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n      // $elem - 经过封装的 elem\n      // toStart - true 开始位置，false 结束位置\n      // isContent - 是否选中Elem的内容\n      if (!$elem.length) {\n        return;\n      }\n\n      var elem = $elem[0];\n      var range = document.createRange();\n\n      if (isContent) {\n        range.selectNodeContents(elem);\n      } else {\n        range.selectNode(elem);\n      }\n\n      if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n      } // 存储 range\n\n\n      this.saveRange(range);\n    }\n  };\n  /*\n      上传进度条\n  */\n\n  function Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n  }\n\n  Progress.prototype = {\n    constructor: Progress,\n    show: function show(progress) {\n      var _this = this; // 状态处理\n\n\n      if (this._isShow) {\n        return;\n      }\n\n      this._isShow = true; // 渲染\n\n      var $bar = this.$bar;\n\n      if (!this._isRender) {\n        var $textContainer = this.$textContainer;\n        $textContainer.append($bar);\n      } else {\n        this._isRender = true;\n      } // 改变进度（节流，100ms 渲染一次）\n\n\n      if (Date.now() - this._time > 100) {\n        if (progress <= 1) {\n          $bar.css('width', progress * 100 + '%');\n          this._time = Date.now();\n        }\n      } // 隐藏\n\n\n      var timeoutId = this._timeoutId;\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        _this._hide();\n      }, 500);\n    },\n    _hide: function _hide() {\n      var $bar = this.$bar;\n      $bar.remove(); // 修改状态\n\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /*\n      上传图片\n  */\n  // 构造函数\n\n\n  function UploadImg(editor) {\n    this.editor = editor;\n  } // 原型\n\n\n  UploadImg.prototype = {\n    constructor: UploadImg,\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n      var editor = this.editor;\n      var debug = editor.config.debug;\n      var customAlert = editor.config.customAlert;\n\n      if (debug) {\n        throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n      } else {\n        if (customAlert && typeof customAlert === 'function') {\n          customAlert(alertInfo);\n        } else {\n          alert(alertInfo);\n        }\n      }\n    },\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n      var _this2 = this;\n\n      if (!link) {\n        return;\n      }\n\n      var editor = this.editor;\n      var config = editor.config; // 校验格式\n\n      var linkImgCheck = config.linkImgCheck;\n      var checkResult = void 0;\n\n      if (linkImgCheck && typeof linkImgCheck === 'function') {\n        checkResult = linkImgCheck(link);\n\n        if (typeof checkResult === 'string') {\n          // 校验失败，提示信息\n          alert(checkResult);\n          return;\n        }\n      }\n\n      editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>'); // 验证图片 url 是否有效，无效的话给出提示\n\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        var callback = config.linkImgCallback;\n\n        if (callback && typeof callback === 'function') {\n          callback(link);\n        }\n\n        img = null;\n      };\n\n      img.onerror = function () {\n        img = null; // 无法成功下载图片\n\n        _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n\n        return;\n      };\n\n      img.onabort = function () {\n        img = null;\n      };\n\n      img.src = link;\n    },\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n      var _this3 = this;\n\n      if (!files || !files.length) {\n        return;\n      } // ------------------------------ 获取配置信息 ------------------------------\n\n\n      var editor = this.editor;\n      var config = editor.config;\n      var uploadImgServer = config.uploadImgServer;\n      var uploadImgShowBase64 = config.uploadImgShowBase64;\n      var maxSize = config.uploadImgMaxSize;\n      var maxSizeM = maxSize / 1024 / 1024;\n      var maxLength = config.uploadImgMaxLength || 10000;\n      var uploadFileName = config.uploadFileName || '';\n      var uploadImgParams = config.uploadImgParams || {};\n      var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n      var uploadImgHeaders = config.uploadImgHeaders || {};\n      var hooks = config.uploadImgHooks || {};\n      var timeout = config.uploadImgTimeout || 3000;\n      var withCredentials = config.withCredentials;\n\n      if (withCredentials == null) {\n        withCredentials = false;\n      }\n\n      var customUploadImg = config.customUploadImg;\n\n      if (!customUploadImg) {\n        // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n        if (!uploadImgServer && !uploadImgShowBase64) {\n          return;\n        }\n      } // ------------------------------ 验证文件信息 ------------------------------\n\n\n      var resultFiles = [];\n      var errInfo = [];\n      arrForEach(files, function (file) {\n        var name = file.name;\n        var size = file.size; // chrome 低版本 name === undefined\n\n        if (!name || !size) {\n          return;\n        }\n\n        if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n          // 后缀名不合法，不是图片\n          errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n          return;\n        }\n\n        if (maxSize < size) {\n          // 上传图片过大\n          errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n          return;\n        } // 验证通过的加入结果列表\n\n\n        resultFiles.push(file);\n      }); // 抛出验证信息\n\n      if (errInfo.length) {\n        this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n        return;\n      }\n\n      if (resultFiles.length > maxLength) {\n        this._alert('一次最多上传' + maxLength + '张图片');\n\n        return;\n      } // ------------------------------ 自定义上传 ------------------------------\n\n\n      if (customUploadImg && typeof customUploadImg === 'function') {\n        customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n        return;\n      } // 添加图片数据\n\n\n      var formdata = new FormData();\n      arrForEach(resultFiles, function (file) {\n        var name = uploadFileName || file.name;\n        formdata.append(name, file);\n      }); // ------------------------------ 上传图片 ------------------------------\n\n      if (uploadImgServer && typeof uploadImgServer === 'string') {\n        // 添加参数\n        var uploadImgServerArr = uploadImgServer.split('#');\n        uploadImgServer = uploadImgServerArr[0];\n        var uploadImgServerHash = uploadImgServerArr[1] || '';\n        objForEach(uploadImgParams, function (key, val) {\n          // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n          // val = encodeURIComponent(val)\n          // 第一，将参数拼接到 url 中\n          if (uploadImgParamsWithUrl) {\n            if (uploadImgServer.indexOf('?') > 0) {\n              uploadImgServer += '&';\n            } else {\n              uploadImgServer += '?';\n            }\n\n            uploadImgServer = uploadImgServer + key + '=' + val;\n          } // 第二，将参数添加到 formdata 中\n\n\n          formdata.append(key, val);\n        });\n\n        if (uploadImgServerHash) {\n          uploadImgServer += '#' + uploadImgServerHash;\n        } // 定义 xhr\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', uploadImgServer); // 设置超时\n\n        xhr.timeout = timeout;\n\n        xhr.ontimeout = function () {\n          // hook - timeout\n          if (hooks.timeout && typeof hooks.timeout === 'function') {\n            hooks.timeout(xhr, editor);\n          }\n\n          _this3._alert('上传图片超时');\n        }; // 监控 progress\n\n\n        if (xhr.upload) {\n          xhr.upload.onprogress = function (e) {\n            var percent = void 0; // 进度条\n\n            var progressBar = new Progress(editor);\n\n            if (e.lengthComputable) {\n              percent = e.loaded / e.total;\n              progressBar.show(percent);\n            }\n          };\n        } // 返回数据\n\n\n        xhr.onreadystatechange = function () {\n          var result = void 0;\n\n          if (xhr.readyState === 4) {\n            if (xhr.status < 200 || xhr.status >= 300) {\n              // hook - error\n              if (hooks.error && typeof hooks.error === 'function') {\n                hooks.error(xhr, editor);\n              } // xhr 返回状态错误\n\n\n              _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n\n              return;\n            }\n\n            result = xhr.responseText;\n\n            if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n              try {\n                result = JSON.parse(result);\n              } catch (ex) {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                }\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                return;\n              }\n            }\n\n            if (!hooks.customInsert && result.errno != '0') {\n              // hook - fail\n              if (hooks.fail && typeof hooks.fail === 'function') {\n                hooks.fail(xhr, editor, result);\n              } // 数据错误\n\n\n              _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n            } else {\n              if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                // 使用者自定义插入方法\n                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n              } else {\n                // 将图片插入编辑器\n                var data = result.data || [];\n                data.forEach(function (link) {\n                  _this3.insertLinkImg(link);\n                });\n              } // hook - success\n\n\n              if (hooks.success && typeof hooks.success === 'function') {\n                hooks.success(xhr, editor, result);\n              }\n            }\n          }\n        }; // hook - before\n\n\n        if (hooks.before && typeof hooks.before === 'function') {\n          var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n          if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n            if (beforeResult.prevent) {\n              // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n              this._alert(beforeResult.msg);\n\n              return;\n            }\n          }\n        } // 自定义 headers\n\n\n        objForEach(uploadImgHeaders, function (key, val) {\n          xhr.setRequestHeader(key, val);\n        }); // 跨域传 cookie\n\n        xhr.withCredentials = withCredentials; // 发送请求\n\n        xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n        return;\n      } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n      if (uploadImgShowBase64) {\n        arrForEach(files, function (file) {\n          var _this = _this3;\n          var reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = function () {\n            _this.insertLinkImg(this.result);\n          };\n        });\n      }\n    }\n  };\n  /*\n      编辑器构造函数\n  */\n  // id，累加\n\n  var editorId = 1; // 构造函数\n\n  function Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n      // 没有传入任何参数，报错\n      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    } // id，用以区分单个页面不同的编辑器对象\n\n\n    this.id = 'wangEditor-' + editorId++;\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector; // 自定义配置\n\n    this.customConfig = {};\n  } // 修改原型\n\n\n  Editor.prototype = {\n    constructor: Editor,\n    // 初始化配置\n    _initConfig: function _initConfig() {\n      // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n      var target = {};\n      this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n      var langConfig = this.config.lang || {};\n      var langArgs = [];\n      objForEach(langConfig, function (key, val) {\n        // key 即需要生成正则表达式的规则，如“插入链接”\n        // val 即需要被替换成的语言，如“insert link”\n        langArgs.push({\n          reg: new RegExp(key, 'img'),\n          val: val\n        });\n      });\n      this.config.langArgs = langArgs;\n    },\n    // 初始化 DOM\n    _initDom: function _initDom() {\n      var _this = this;\n\n      var toolbarSelector = this.toolbarSelector;\n      var $toolbarSelector = $(toolbarSelector);\n      var textSelector = this.textSelector;\n      var config$$1 = this.config;\n      var zIndex = config$$1.zIndex; // 定义变量\n\n      var $toolbarElem = void 0,\n          $textContainerElem = void 0,\n          $textElem = void 0,\n          $children = void 0;\n\n      if (textSelector == null) {\n        // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n        $toolbarElem = $('<div></div>');\n        $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n        $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n        $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n        $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n      } else {\n        // toolbar 和 text 的选择器都有值，记录属性\n        $toolbarElem = $toolbarSelector;\n        $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $textContainerElem.children();\n      } // 编辑区域\n\n\n      $textElem = $('<div></div>');\n      $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n      if ($children && $children.length) {\n        $textElem.append($children);\n      } else {\n        $textElem.append($('<p><br></p>'));\n      } // 编辑区域加入DOM\n\n\n      $textContainerElem.append($textElem); // 设置通用的 class\n\n      $toolbarElem.addClass('w-e-toolbar');\n      $textContainerElem.addClass('w-e-text-container');\n      $textContainerElem.css('z-index', zIndex);\n      $textElem.addClass('w-e-text'); // 添加 ID\n\n      var toolbarElemId = getRandom('toolbar-elem');\n      $toolbarElem.attr('id', toolbarElemId);\n      var textElemId = getRandom('text-elem');\n      $textElem.attr('id', textElemId); // 记录属性\n\n      this.$toolbarElem = $toolbarElem;\n      this.$textContainerElem = $textContainerElem;\n      this.$textElem = $textElem;\n      this.toolbarElemId = toolbarElemId;\n      this.textElemId = textElemId; // 记录输入法的开始和结束\n\n      var compositionEnd = true;\n      $textContainerElem.on('compositionstart', function () {\n        // 输入法开始输入\n        compositionEnd = false;\n      });\n      $textContainerElem.on('compositionend', function () {\n        // 输入法结束输入\n        compositionEnd = true;\n      }); // 绑定 onchange\n\n      $textContainerElem.on('click keyup', function () {\n        // 输入法结束才出发 onchange\n        compositionEnd && _this.change && _this.change();\n      });\n      $toolbarElem.on('click', function () {\n        this.change && this.change();\n      }); //绑定 onfocus 与 onblur 事件\n\n      if (config$$1.onfocus || config$$1.onblur) {\n        // 当前编辑器是否是焦点状态\n        this.isFocus = false;\n        $(document).on('click', function (e) {\n          //判断当前点击元素是否在编辑器内\n          var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n          var isToolbar = $toolbarElem.isContain($(e.target));\n          var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n          if (!isChild) {\n            //若为选择工具栏中的功能，则不视为成blur操作\n            if (isToolbar && !isMenu) {\n              return;\n            }\n\n            if (_this.isFocus) {\n              _this.onblur && _this.onblur();\n            }\n\n            _this.isFocus = false;\n          } else {\n            if (!_this.isFocus) {\n              _this.onfocus && _this.onfocus();\n            }\n\n            _this.isFocus = true;\n          }\n        });\n      }\n    },\n    // 封装 command\n    _initCommand: function _initCommand() {\n      this.cmd = new Command(this);\n    },\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n      this.selection = new API(this);\n    },\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n      this.uploadImg = new UploadImg(this);\n    },\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n      this.menus = new Menus(this);\n      this.menus.init();\n    },\n    // 添加 text 区域\n    _initText: function _initText() {\n      this.txt = new Text(this);\n      this.txt.init();\n    },\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n      var $textElem = this.$textElem;\n      var $children = $textElem.children();\n\n      if (!$children.length) {\n        // 如果编辑器区域无内容，添加一个空行，重新设置选区\n        $textElem.append($('<p><br></p>'));\n        this.initSelection();\n        return;\n      }\n\n      var $last = $children.last();\n\n      if (newLine) {\n        // 新增一个空行\n        var html = $last.html().toLowerCase();\n        var nodeName = $last.getNodeName();\n\n        if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n          // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n      }\n\n      this.selection.createRangeByElem($last, false, true);\n      this.selection.restoreSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // -------- 绑定 onchange 事件 --------\n      var onChangeTimeoutId = 0;\n      var beforeChangeHtml = this.txt.html();\n      var config$$1 = this.config; // onchange 触发延迟时间\n\n      var onchangeTimeout = config$$1.onchangeTimeout;\n      onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n      if (!onchangeTimeout || onchangeTimeout <= 0) {\n        onchangeTimeout = 200;\n      }\n\n      var onchange = config$$1.onchange;\n\n      if (onchange && typeof onchange === 'function') {\n        // 触发 change 的有三个场景：\n        // 1. $textContainerElem.on('click keyup')\n        // 2. $toolbarElem.on('click')\n        // 3. editor.cmd.do()\n        this.change = function () {\n          // 判断是否有变化\n          var currentHtml = this.txt.html();\n\n          if (currentHtml.length === beforeChangeHtml.length) {\n            // 需要比较每一个字符\n            if (currentHtml === beforeChangeHtml) {\n              return;\n            }\n          } // 执行，使用节流\n\n\n          if (onChangeTimeoutId) {\n            clearTimeout(onChangeTimeoutId);\n          }\n\n          onChangeTimeoutId = setTimeout(function () {\n            // 触发配置的 onchange 函数\n            onchange(currentHtml);\n            beforeChangeHtml = currentHtml;\n          }, onchangeTimeout);\n        };\n      } // -------- 绑定 onblur 事件 --------\n\n\n      var onblur = config$$1.onblur;\n\n      if (onblur && typeof onblur === 'function') {\n        this.onblur = function () {\n          var currentHtml = this.txt.html();\n          onblur(currentHtml);\n        };\n      } // -------- 绑定 onfocus 事件 --------\n\n\n      var onfocus = config$$1.onfocus;\n\n      if (onfocus && typeof onfocus === 'function') {\n        this.onfocus = function () {\n          onfocus();\n        };\n      }\n    },\n    // 创建编辑器\n    create: function create() {\n      // 初始化配置信息\n      this._initConfig(); // 初始化 DOM\n\n\n      this._initDom(); // 封装 command API\n\n\n      this._initCommand(); // 封装 selection range API\n\n\n      this._initSelectionAPI(); // 添加 text\n\n\n      this._initText(); // 初始化菜单\n\n\n      this._initMenus(); // 添加 图片上传\n\n\n      this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n      this.initSelection(true); // 绑定事件\n\n      this._bindEvent();\n    },\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n      $.offAll();\n    }\n  }; // 检验是否浏览器环境\n\n  try {\n    document;\n  } catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n  } // polyfill\n\n\n  polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n  var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = inlinecss;\n  document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n  var index = window.wangEditor || Editor;\n  return index;\n});","map":{"version":3,"sources":["C:/Users/kaituo/Downloads/06Artikola-administrado-master/node_modules/wangeditor/release/wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","polyfill","Object","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","i","item","createElemByHTML","html","div","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","result","eventList","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","$","get","first","last","on","type","types","split","addEventListener","e","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","reg","test","isIE","window","objForEach","obj","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","clearTimeout","$menuELem","menuHeight","height","width","showTimeoutId","Head","droplist","_command","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","FontSize","FontName","fontName","emptyFn","_isCreatedPanelMenus","Panel","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","Link","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","Italic","Redo","StrikeThrough","Underline","Undo","List","$parent","Justify","ForeColor","color","BackColor","Quote","$targetELem","Code","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","Emoticon","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","Table","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","name","toLowerCase","newTd","$table","Video","textValId","Image","imgMenuId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","Menus","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","getPasteText","clipboardData","originalEvent","pasteText","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","txt","items","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","Text","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","keyCode","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","txtHtml","pasteTime","canDo","now","Date","flag","resetTime","ex","pasteFiles","img","$document","dataTransfer","Command","_do","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","API","_currentRange","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","inlinecss","getElementsByTagName"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]},"metadata":{},"sourceType":"script"}